{"remainingRequest":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/src/components/BaseTable.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/src/components/BaseTable.vue","mtime":1636000351728},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5wb2ludGVyewogIGN1cnNvcjogcG9pbnRlcjsKfQo="},{"version":3,"sources":["BaseTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsHA;AACA;AACA","file":"BaseTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <table class=\"table tablesorter\" :class=\"tableClass\">\n    <thead :class=\"theadClasses\">\n    <tr>\n      <slot name=\"columns\">\n        <th v-for=\"column in columns\" class=\"text-center\" :key=\"column\">{{column}}</th>\n      </slot>\n    </tr>\n    </thead>\n    <tbody :class=\"tbodyClasses\">\n    <tr v-for=\"(item, index) in data\" class=\"text-center\" :key=\"index\">\n      <slot :row=\"item\">\n        <td v-for=\"(column, index) in item\"\n            :key=\"index\"\n            class=\"pointer\">\n            <span v-if=\"index!=='paid'\">\n              <span v-if=\"index=='link'\">\n                <base-button slot=\"footer\" type=\"primary\" v-if=\"!item.paid\" @click=\"goTo(item)\">Pay</base-button>\n                <base-button slot=\"footer\" type=\"primary\" v-else disabled='true'>Paid</base-button>\n              </span>\n              <span v-else>{{column}}</span>\n            </span>\n            \n            \n        </td>\n        <!-- <td>\n          {{item.name}}\n        </td>\n        <td>\n          {{item.price}}\n        </td>\n        <td>\n          <base-button slot=\"footer\" type=\"primary\" v-if=\"!item.paid\" @click=\"goTo(item)\">Pay</base-button>\n          <base-button slot=\"footer\" type=\"primary\" v-else disabled='true'>Paid</base-button>\n        </td>\n        <td>\n          {{item.date}}\n        </td> -->\n      </slot>\n    </tr>\n    </tbody>\n  </table>\n</template>\n<script>\nimport API from '../api/API'\n  export default {\n    name: 'base-table',\n    props: {\n      columns: {\n        type: Array,\n        default: () => [],\n        description: \"Table columns\"\n      },\n      data: {\n        type: Array,\n        default: () => [],\n        description: \"Table data\"\n      },\n      type: {\n        type: String, // striped | hover\n        default: \"\",\n        description: \"Whether table is striped or hover type\"\n      },\n      theadClasses: {\n        type: String,\n        default: '',\n        description: \"<thead> css classes\"\n      },\n      tbodyClasses: {\n        type: String,\n        default: '',\n        description: \"<tbody> css classes\"\n      }\n    },\n    computed: {\n      tableClass() {\n        return this.type && `table-${this.type}`;\n      },\n      \n    },\n    methods: {\n      hasValue(item, column) {\n        return item[column.toLowerCase()] !== \"undefined\";\n      },\n      itemValue(item, column) {\n        return item[column.toLowerCase()];\n      },\n      async goTo(item){\n        const token =\n        window.localStorage.getItem(\"token\")\n        item.paid = true\n        var count = 0\n        var data = this.data.slice().reverse()\n        for (var arr of data){\n          \n          if (arr.name == item.name){\n            break\n          }\n          count += 1\n          \n        }\n        \n        const date = new Date();\n        var string_date = String(date).substring(4,24)\n        console.log(string_date)\n        try {\n          const result = API.stripeupdate({count, date: string_date}, token)\n        } catch (error) {\n          console.log(error)\n        }\n        \n        window.open(item.link)\n\n      }\n    }\n  };\n</script>\n<style>\n.pointer{\n  cursor: pointer;\n}\n</style>\n"]}]}