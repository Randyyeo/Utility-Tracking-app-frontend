{"remainingRequest":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/src/pages/Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/src/pages/Profile.vue","mtime":1636350889829},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBUEkgZnJvbSAiLi4vYXBpL0FQSSI7CmltcG9ydCBFZGl0UHJvZmlsZUZvcm0gZnJvbSAiLi9Qcm9maWxlL0VkaXRQcm9maWxlRm9ybSI7CmltcG9ydCBVc2VyQ2FyZCBmcm9tICIuL1Byb2ZpbGUvVXNlckNhcmQiOwppbXBvcnQgeyBNb2RhbCB9IGZyb20gIkAvY29tcG9uZW50cyI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBFZGl0UHJvZmlsZUZvcm0sCiAgICBVc2VyQ2FyZCwKICAgIE1vZGFsCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGlwczogW10sCiAgICAgIGZpcnN0TmFtZTogbnVsbCwKICAgICAgbGFzdE5hbWU6IG51bGwsCiAgICAgIGFkZHJlc3M6IG51bGwsCiAgICAgIHppcDogbnVsbCwKICAgICAgZW1haWw6IG51bGwsCiAgICAgIG5hbWU6IG51bGwsCiAgICAgIG9jY3VwYXRpb246IG51bGwsCiAgICAgIGdlbmRlcjogbnVsbCwKICAgICAgc3RhdHVzOiBudWxsLAogICAgICBkZXNjcmlwdGlvbjogbnVsbCwKICAgICAgcG9wTW9kYWw6IGZhbHNlLAogICAgICBtZXNzYWdlOiBudWxsCiAgICB9OwogIH0sCiAgbWV0aG9kczp7CiAgICBzaG93TW9kYWwobWVzc2FnZSl7CiAgICAgIAogICAgICB0aGlzLnBvcE1vZGFsID0gdHJ1ZQogICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlCiAgICB9CiAgfSwKICBhc3luYyBtb3VudGVkKCkgewogICAgY29uc3QgdG9rZW4gPSB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oInRva2VuIik7CgogICAgdHJ5IHsKICAgICAgY29uc3QgcmVzID0gYXdhaXQgQVBJLmZpbmRUaXAodG9rZW4pOwogICAgICB0aGlzLnRpcHMgPSByZXMuZGF0YVswXS50aXBzOwogICAgfSBjYXRjaCAoZXJyb3IpIHt9CiAgICB0cnkgewogICAgICBjb25zdCByZXMxID0gYXdhaXQgQVBJLmZpbmRQcm9maWxlKHRva2VuKTsKCiAgICAgIGNvbnN0IHsKICAgICAgICBuYW1lLAogICAgICAgIGFkZHJlc3MsCiAgICAgICAgemlwLAogICAgICAgIGVtYWlsLAogICAgICAgIG9jY3VwYXRpb24sCiAgICAgICAgZ2VuZGVyLAogICAgICAgIHN0YXR1cywKICAgICAgICBkZXNjcmlwdGlvbgogICAgICB9ID0gcmVzMS5kYXRhWzBdOwoKICAgICAgdGhpcy5maXJzdE5hbWUgPSBuYW1lLnNwbGl0KCIgIilbMF07CiAgICAgIHRoaXMubGFzdE5hbWUgPSBuYW1lLnNwbGl0KCIgIilbMV07CiAgICAgIHRoaXMuYWRkcmVzcyA9IGFkZHJlc3M7CiAgICAgIHRoaXMuemlwID0gemlwOwogICAgICB0aGlzLmVtYWlsID0gZW1haWw7CiAgICAgIHRoaXMubmFtZSA9IG5hbWU7CiAgICAgIHRoaXMub2NjdXBhdGlvbiA9IG9jY3VwYXRpb247CiAgICAgIHRoaXMuZ2VuZGVyID0gZ2VuZGVyOwogICAgICB0aGlzLnN0YXR1cyA9IHN0YXR1czsKICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uOwogICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Profile.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div>\n    <div v-if=\"popModal\">\n          <modal class=\"my-modal\"\n            :show.sync=\"popModal\"\n            :centered=\"false\"\n            :show-close=\"true\"\n            \n          >\n            <template v-slot:header class='bg-gradient-dark'>\n              \n            </template>\n              <h2 class='text-success'>{{ message }}</h2>\n\n            \n            <h4 class='text-primary'>Click anywhere to continue </h4>\n                      \n            <template v-slot:close-button>\n            </template>\n          </modal>\n           </div>\n    <div class=\"row\">\n      <div class=\"col-md-8\">\n        <edit-profile-form\n          :tips=\"tips\"\n          :firstName=\"firstName\"\n          :lastName=\"lastName\"\n          :address=\"address\"\n          :zip=\"zip\"\n          :email=\"email\"\n          :description=\"description\"\n          @modal=\"showModal\"\n        >\n        </edit-profile-form>\n      </div>\n      <div class=\"col-md-4\">\n        <user-card\n          :name=\"name\"\n          :occupation=\"occupation\"\n          :gender=\"gender\"\n          :status=\"status\"\n          :email=\"email\"\n        ></user-card>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport API from \"../api/API\";\nimport EditProfileForm from \"./Profile/EditProfileForm\";\nimport UserCard from \"./Profile/UserCard\";\nimport { Modal } from \"@/components\";\nexport default {\n  components: {\n    EditProfileForm,\n    UserCard,\n    Modal\n  },\n  data() {\n    return {\n      tips: [],\n      firstName: null,\n      lastName: null,\n      address: null,\n      zip: null,\n      email: null,\n      name: null,\n      occupation: null,\n      gender: null,\n      status: null,\n      description: null,\n      popModal: false,\n      message: null\n    };\n  },\n  methods:{\n    showModal(message){\n      \n      this.popModal = true\n      this.message = message\n    }\n  },\n  async mounted() {\n    const token = window.localStorage.getItem(\"token\");\n\n    try {\n      const res = await API.findTip(token);\n      this.tips = res.data[0].tips;\n    } catch (error) {}\n    try {\n      const res1 = await API.findProfile(token);\n\n      const {\n        name,\n        address,\n        zip,\n        email,\n        occupation,\n        gender,\n        status,\n        description\n      } = res1.data[0];\n\n      this.firstName = name.split(\" \")[0];\n      this.lastName = name.split(\" \")[1];\n      this.address = address;\n      this.zip = zip;\n      this.email = email;\n      this.name = name;\n      this.occupation = occupation;\n      this.gender = gender;\n      this.status = status;\n      this.description = description;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n};\n</script>\n<style></style>\n"]}]}