{"remainingRequest":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/src/pages/Community.vue?vue&type=style&index=0&id=0906bd16&lang=scss&scoped=true&","dependencies":[{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/src/pages/Community.vue","mtime":1636680504973},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmggewogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW46IDVweDsKfQoubmF2aWdhdGlvbiB7CiAgY3Vyc29yOiBwb2ludGVyOwp9CgoubG9hZGluZyB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogMTcwJTsKICBsZWZ0OiA0MiU7Cn0KCi5hZGQgewogIGJhY2tncm91bmQtY29sb3I6IHB1cnBsZTsKfQoKLmJ1dHRvbnMtYmFyIHsKICBtYXJnaW46IGF1dG87Cn0KCmRpdiB7CiAgZm9udC13ZWlnaHQ6IDQwMDsKICBmb250LXNpemU6IDEzcHg7CiAgY29sb3I6ICNjMGMxYzI7Cn0KCgojZmxvYXRpbmdUZXh0YXJlYTo6cGxhY2Vob2xkZXJ7CiAgICBjb2xvcjpibGFjawogfQo="},{"version":3,"sources":["Community.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2TA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA","file":"Community.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div>\n    <div v-if=\"popModal\">\n      <modal\n        class=\"my-modal\"\n        :show.sync=\"popModal\"\n        :centered=\"false\"\n        :show-close=\"true\"\n      >\n        <template v-slot:header class=\"bg-gradient-dark\"> </template>\n        <h2 class=\"text-success\">Welcome to the Community Page</h2>\n\n        <h4>\n          Under this page, you will be view what the other users have to share\n        </h4>\n\n        <br />\n        <h4 class=\"text-primary\">Click anywhere to continue</h4>\n\n        <template v-slot:close-button> </template>\n      </modal>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <card>\n          <template v-slot:header>\n            <div class=\"d-flex justify-content-between align-items-center\">\n              <h4 class=\"card-title\">{{ table1.title }}</h4>\n              <button type=\"button\" class=\"btn btn-sm\" @click=\"showModal\">\n                <i class=\"tim-icons icon-simple-add m-auto\"></i>\n              </button>\n            </div>\n          </template>\n          <div v-if=\"xModal\" class=\"text-light\">\n            <modal\n              :show.sync=\"xModal\"\n              class=\"modal-search\"\n              id=\"searchModal\"\n              :centered=\"false\"\n              :show-close=\"true\"\n            >\n              <template v-slot:header>\n                Upload a New Post\n              </template>\n              <div class=\"form-floating\">\n                <textarea\n                  class=\"form-control border-secondary text-dark border rounded-1\"\n                  placeholder=\"Leave your post here\"\n                  v-model=\"posttext\"\n                  id=\"floatingTextarea\"\n                ></textarea>\n              </div>\n              <template v-slot:close-button></template>\n              <button type=\"button\" class=\"btn mt-3\" @click=\"addPost()\">\n                Submit Post\n              </button>\n              <p v-if=\"error\" class=\"text-danger label\">\n                Error has occurred\n              </p>\n            </modal>\n          </div>\n          <div v-if=\"isLoading\" class=\"loading\">\n            <vue-simple-spinner\n              message=\"Please wait while we retrieve your bills\"\n            ></vue-simple-spinner>\n          </div>\n          <div class=\"table relative\">\n            <base-table\n              :data=\"posts\"\n              :columns=\"table1.columns\"\n              thead-classes=\"text-light\"\n              community=\"yes\"\n              :fulldata=\"fulldata\"\n              @modal=\"openUserInfo\"\n              @delete=\"removePost\"\n            >\n            </base-table>\n          </div>\n          <modal\n            :show.sync=\"userInfo\"\n            class=\"modal-search\"\n            id=\"searchModal\"\n            :centered=\"false\"\n            :show-close=\"true\"\n            \n          >\n            <div class=\"container text-center\">\n              <span v-if=\"url\"><img class=\"avatar\" :src=\"url\" alt=\"...\" style=\"width: 120px; height: 130px;\"/></span>\n              <span v-else>\n                <img\n                  class=\"avatar\"\n                  v-if=\"gender == 'M'\"\n                  src=\"img/anime3.png\"\n                  style=\"width: 130px; height: 130px;\"\n                />\n                <img class=\"avatar\" v-else src=\"img/anime6.png\" style=\"width: 130px; height: 130px;\" />\n              </span>\n              <br />\n              <h3 style=\"color:black;\">{{ name }}, {{ occupation }}</h3>\n              <h4 style=\"color:black;\">{{ status }}</h4><hr>\n              <h3 style=\"color:black;\">Description:</h3>\n              <h4 style=\"color:black;\">{{ description }}</h4><hr>\n              <p style=\"color:black;\">Tips</p>\n              <ul style=\"color:black;\">\n                <li\n                  style=\"color:black;\"\n                  v-for=\"(tip, index) in tips\"\n                  :key=\"index\"\n                >\n                  {{ tip.words }}\n                </li>\n              </ul>\n            </div>\n          </modal>\n        </card>\n      </div>\n      <div class=\"buttons-bar h\">\n        <button\n          type=\"button\"\n          class=\" btn-secondary  mr-1 navigation \"\n          v-for=\"index in pages\"\n          :key=\"index\"\n          @click=\"next(index)\"\n        >\n          {{ index }}\n        </button>\n\n        <button\n          type=\"button\"\n          class=\"btn-secondary mr-1 navigation\"\n          @click=\"addone\"\n        >\n          >\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { BaseTable } from \"@/components\";\nimport { Modal } from \"@/components\";\nconst tableColumns = [\"Thread\", \"Name\", \"Replies\"];\nimport API from \"../api/API\";\n\nexport default {\n  components: {\n    BaseTable,\n    Modal\n  },\n  data() {\n    return {\n      popModal: false,\n      isLoading: false,\n      error: false,\n      posttext: \"\",\n      xModal: false,\n      table1: {\n        title: \"Forum Discussion\",\n        columns: [...tableColumns],\n        data: []\n      },\n      page: 1,\n      userInfo: false,\n      name: null,\n      occupation: null,\n      status: null,\n      description: null,\n      tips: null,\n      url: null,\n      gender: null,\n      fulldata: []\n    };\n  },\n  computed: {\n    pages() {\n      var no_pages = Math.ceil(this.table1.data.length / 10);\n      return no_pages;\n    },\n    posts() {\n      var end = this.page * 10;\n      return this.table1.data.slice(end - 10, end);\n    }\n  },\n  methods: {\n    async removePost(item) {\n      const token = window.localStorage.getItem(\"token\");\n\n      for (var index in this.table1.data) {\n        if (this.table1.data[index].post_id == item.post_id) {\n          this.table1.data.splice(index, 1);\n        }\n      }\n      try {\n        const res1 = await API.deletePost({ id: item.post_id }, token);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async openUserInfo(item) {\n      const token = window.localStorage.getItem(\"token\");\n      this.userInfo = true;\n      try {\n        const res1 = await API.specialProfile({ id: item.id }, token);\n        const { name, occupation, status, description, picture, gender } = res1.data[0];\n        this.name = \"\";\n        this.occupation = \"\";\n        this.status = \"\";\n        this.description = \"\";\n        this.name = name;\n        this.occupation = occupation;\n        this.status = status;\n        this.description = description;\n        this.url = picture;\n        this.gender = gender\n      } catch (error) {\n        console.log(error);\n      }\n      try {\n        const res = await API.specialTips({ id: item.id }, token);\n        this.tips = [];\n        this.tips = res.data[0].tips;\n      } catch (error) {}\n    },\n    next(index) {\n      this.page = index;\n    },\n    addone() {\n      if (this.page + 1 < Math.ceil(this.table1.data / 10)) {\n        this.page += 1;\n      }\n    },\n    async addPost() {\n      var t = this.posttext;\n      var date = new Date();\n      const random = Math.ceil(Math.random() * 101);\n      const token = window.localStorage.getItem(\"token\");\n      try {\n        const res1 = await API.findProfile(token);\n        const { name } = res1.data[0];\n        var username = name.split(\" \")[0];\n\n        this.table1.data.unshift({ thread: t, username, replies: random });\n      } catch (error) {\n        console.log(error);\n      }\n      try {\n        const random = Math.ceil(Math.random() * 101);\n        const result = await API.addPost(\n          { date, post: t, username, replies: random },\n          token\n        );\n      } catch (error) {\n        this.error = true;\n      }\n\n      this.xModal = false;\n    },\n    showModal() {\n      this.xModal = true;\n    },\n    closeModal() {\n      this.xModal = false;\n    },\n    closeModalpop() {\n      this.popModal = false;\n    }\n  },\n  async mounted() {\n    this.isLoading = true;\n    const token = window.localStorage.getItem(\"token\");\n    try {\n      const res1 = await API.findProfile(token);\n      const { community } = res1.data[0];\n      if (!community) {\n        this.popModal = true;\n        const result = await API.updateFirst({ community: true }, token);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    try {\n      const result = await API.findPost(token);\n      var data = result.data;\n\n      data.sort(function(a, b) {\n        return b.date - a.date;\n      });\n\n      for (var i = 0; i < data.length; i++) {\n        this.table1.data.unshift({\n          thread: data[i].thread,\n          username: data[i].username,\n          replies: String(data[i].replies),\n          \n        });\n        this.fulldata.unshift({\n          thread: data[i].thread,\n          username: data[i].username,\n          replies: String(data[i].replies),\n          id: data[i].id,\n          isUser: data[i].isUser,\n          post_id: data[i].post_id\n        })\n      }\n      \n    } catch (error) {\n      this.error = true;\n    }\n    this.isLoading = false;\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.h {\n  text-align: center;\n  margin: 5px;\n}\n.navigation {\n  cursor: pointer;\n}\n\n.loading {\n  position: absolute;\n  top: 170%;\n  left: 42%;\n}\n\n.add {\n  background-color: purple;\n}\n\n.buttons-bar {\n  margin: auto;\n}\n\ndiv {\n  font-weight: 400;\n  font-size: 13px;\n  color: #c0c1c2;\n}\n\n\n#floatingTextarea::placeholder{\n    color:black\n }\n</style>\n"]}]}