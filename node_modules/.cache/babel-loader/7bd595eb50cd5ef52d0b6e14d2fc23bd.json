{"remainingRequest":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/babel-loader/lib/index.js!/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/src/pages/LiveTracking.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/src/pages/LiveTracking.vue","mtime":1636029356266},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/.babelrc","mtime":1635770927386},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["LiveTracking.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n  <div>\n    <div class=\"row\">\n      <div class=\"col-lg-3 col-md-6 col-sm-12 d-flex\">\n        <card class=\"card-body flex-fill\">\n          <div>\n            <div class=\"row\">\n              <div class=\"col-5\">\n                <div class=\"icon-big text-center\">\n                  <i class=\"tim-icons tim-icons-32 icon-atom text-success\"></i>\n                </div>\n              </div>\n              <div class=\"col-7\">\n                <div class=\"numbers\">\n                  <p>Television</p>\n                  {{usage1}} kwH\n                </div>\n              </div>\n            </div>\n            <div>\n              <hr />\n              <div class=\"stats\">\n            \n                <i class=\"tim-icons icon-refresh-02\"></i> Updating Live</div>\n              \n            </div>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-lg-3 col-md-6 col-sm-12 d-flex\">\n        <card class=\"card-body flex-fill\">\n          <div>\n            <div class=\"row\">\n              <div class=\"col-5\">\n                <div class=\"icon-big text-center\">\n                  <i class=\"tim-icons tim-icons-32 icon-mobile text-success\"></i>\n                </div>\n              </div>\n              <div class=\"col-7\">\n                <div class=\"numbers\">\n                  <p>Electrical Stove</p>\n                  {{usage2}} kwH\n                </div>\n              </div>\n            </div>\n            <div>\n              <hr />\n              <div class=\"stats\"><i class=\"tim-icons icon-refresh-02\"></i> Updating Live</div>\n            </div>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-lg-3 col-md-6 col-sm-12 d-flex\" >\n        <card class=\"card-body flex-fill\" >\n          <div>\n            <div class=\"row\">\n              <div class=\"col-5\">\n                <div class=\"icon-large text-center\">\n                  <i class=\"tim-icons tim-icons-32 icon-spaceship text-success \"></i>\n                </div>\n              </div>\n              <div class=\"col-7 \">\n                <div class=\"numbers \">\n                  <p>Oven</p>\n                  {{usage3}} kwH\n                </div>\n              </div>\n            </div>\n            <div>\n              <hr />\n              <div class=\"stats\"><i class=\"tim-icons icon-refresh-02\"></i> Updating Live</div>\n            </div>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-lg-3 col-md-6 col-sm-12 d-flex\">\n        <card class=\"card-body flex-fill \">\n          <div>\n            <div class=\"row\">\n              <div class=\"col-5\">\n                <div class=\"icon-big text-center\">\n                  <i class=\"tim-icons tim-icons-32 icon-laptop text-success\"></i>\n                </div>\n              </div>\n              <div class=\"col-7\">\n                <div class=\"numbers\">\n                  <p>Air-Conditioner</p>\n                  {{usage4}} kwH\n                </div>\n              </div>\n            </div>\n            <div>\n              <hr />\n              <div class=\"stats\"><i class=\"tim-icons icon-refresh-01\"></i> Updating Live</div>\n            </div>\n          </div>\n        </card>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <div class=\"row\">\n              <!-- big line graph -->\n              <div class=\"col-sm-6\" :class=\"isRTL ? 'text-right' : 'text-left'\">\n                <h5 class=\"card-category\">\n                  {{ $t(\"dashboard.totalShipments\") }}\n                </h5>\n                <h2 class=\"card-title\">{{ $t(\"dashboard.monthlyUtilConsumption\") }}: {{total}} </h2>\n              </div>\n              <div class=\"col-sm-6\">\n                <div\n                  class=\"btn-group btn-group-toggle\"\n                  :class=\"isRTL ? 'float-left' : 'float-right'\"\n                  data-toggle=\"buttons\"\n                >\n                  \n                </div>\n              </div>\n            </div>\n          </template>\n\n\n          <div class=\"chart-area\">\n            <line-chart\n              style=\"height: 100%\"\n              ref=\"bigChart\"\n              chart-id=\"big-line-chart\"\n              :chart-data=\"bigLineChart.chartData\"\n              :gradient-colors=\"bigLineChart.gradientColors\"\n              :gradient-stops=\"bigLineChart.gradientStops\"\n              :extra-options=\"bigLineChart.extraOptions\"\n            >\n            </line-chart>\n          </div>\n        </card>\n      </div>\n    </div>\n    <div class=\"row\">\n<!-- first mini line graph -->\n      <div class=\"col-lg-4\" :class=\"{ 'text-right': isRTL }\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h5 class=\"card-category\">{{ $t(\"dashboard.electricityBreakdown\") }}</h5>\n            <h3 class=\"card-title\">\n              <i class=\"tim-icons icon-bell-55 text-primary\"></i> {{usage1}}\n            </h3>\n          </template>\n          <div class=\"chart-area\">\n            <line-chart\n              style=\"height: 100%\"\n              chart-id=\"green-line-chart\"\n              :chart-data=\"greenLineChart1.chartData\"\n              :gradient-stops=\"greenLineChart1.gradientStops\"\n              :extra-options=\"greenLineChart1.extraOptions\"\n            >\n            </line-chart>\n          </div>\n        </card>\n      </div>\n\n    <!-- second mini line graph -->\n\n      <div class=\"col-lg-4\" :class=\"{ 'text-right': isRTL }\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h5 class=\"card-category\">{{ $t(\"dashboard.waterBreakdown\") }}</h5>\n            <h3 class=\"card-title\">\n              <i class=\"tim-icons icon-video-66 text-primary\"></i> {{usage2}}\n            </h3>\n          </template>\n          <div class=\"chart-area\">\n            <line-chart\n              style=\"height: 100%\"\n              chart-id=\"green-line-chart\"\n              :chart-data=\"greenLineChart2.chartData\"\n              :gradient-stops=\"greenLineChart2.gradientStops\"\n              :extra-options=\"greenLineChart2.extraOptions\"\n            >\n            </line-chart>\n          </div>\n        </card>\n      </div>\n\n<!-- third mini line graph-->\n\n      <div class=\"col-lg-4\" :class=\"{ 'text-right': isRTL }\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h5 class=\"card-category\">{{ $t(\"dashboard.gasBreakdown\") }}</h5>\n            <h3 class=\"card-title\">\n              <i class=\"tim-icons icon-atom text-primary\"></i> {{usage3}}\n            </h3>\n          </template>\n\n          <div class=\"chart-area\">\n            <line-chart\n              style=\"height: 100%\"\n              chart-id=\"green-line-chart\"\n              :chart-data=\"greenLineChart3.chartData\"\n              :gradient-stops=\"greenLineChart3.gradientStops\"\n              :extra-options=\"greenLineChart3.extraOptions\"\n            >\n            </line-chart>\n          </div>\n        </card>\n      </div>\n    </div>\n    \n  </div>\n</template>\n<script>\nimport LineChart from \"@/components/Charts/LineChart\";\nimport BarChart from \"@/components/Charts/BarChart\";\nimport * as chartConfigs from \"@/components/Charts/config\";\nimport TaskList from \"./Dashboard/TaskList\";\nimport UserTable from \"./Dashboard/UserTable\";\nimport config from \"@/config\";\n\n\n\nexport default {\n  components: {\n    LineChart,\n    BarChart,\n    TaskList,\n    UserTable,\n  },\n  data() {\n    return {\n      randomData:[],\n      smallrandomData:[],\n      smallrandomData2:[],\n      smallrandomData3:[],\n      total:'',\n      usage1:'',\n      usage2:'',\n      usage3:'',\n      usage4:'',\n    \n      \n      bigLineChart: {\n        allData: [\n          [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110],\n          [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120],\n          [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130],\n        ],\n        // activeIndex: 0,\n        chartData: {\n          datasets: [{}],\n          labels: [\n            \"JAN\",\n            \"FEB\",\n            \"MAR\",\n            \"APR\",\n            \"MAY\",\n            \"JUN\",\n            \"JUL\",\n            \"AUG\",\n            \"SEP\",\n            \"OCT\",\n            \"NOV\",\n            \"DEC\",\n          ],\n        },\n        extraOptions: chartConfigs.purpleChartOptions,\n        gradientColors: config.colors.primaryGradient,\n        gradientStops: [1, 0.4, 0],\n        categories: [],\n      },\n      \n      greenLineChart1: {\n        extraOptions: chartConfigs.greenChartOptions,\n        chartData: {\n          labels: [\"\", \"\", \"\", \"\", \"\"],\n          datasets: [\n            {\n              label: \"My First dataset\",\n              fill: true,\n              borderColor: config.colors.danger,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.danger,\n              pointBorderColor: \"rgba(255,255,255,0)\",\n              pointHoverBackgroundColor: config.colors.danger,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [90, 27, 60, 12, 80],\n            },\n          ],\n        },\n        gradientColors: [\n          \"rgba(66,134,121,0.15)\",\n          \"rgba(66,134,121,0.0)\",\n          \"rgba(66,134,121,0)\",\n        ],\n        gradientStops: [1, 0.4, 0],\n      },\n      \n      greenLineChart2: {\n        extraOptions: chartConfigs.greenChartOptions,\n        chartData: {\n          labels: [\"\", \"\", \"\", \"\", \"git\"],\n          datasets: [\n            {\n              label: \"My First dataset\",\n              fill: true,\n              borderColor: config.colors.danger,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.danger,\n              pointBorderColor: \"rgba(255,255,255,0)\",\n              pointHoverBackgroundColor: config.colors.danger,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [90, 27, 60, 12, 80],\n            },\n          ],\n        },\n        gradientColors: [\n          \"rgba(66,134,121,0.15)\",\n          \"rgba(66,134,121,0.0)\",\n          \"rgba(66,134,121,0)\",\n        ],\n        gradientStops: [1, 0.4, 0],\n      },\n      \n      greenLineChart3: {\n        extraOptions: chartConfigs.greenChartOptions,\n        chartData: {\n          labels: [\"\", \"\", \"\", \"\", \"\"],\n          datasets: [\n            {\n              label: \"My First dataset\",\n              fill: true,\n              borderColor: config.colors.danger,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.danger,\n              pointBorderColor: \"rgba(255,255,255,0)\",\n              pointHoverBackgroundColor: config.colors.danger,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [90, 27, 60, 12, 80],\n            },\n          ],\n        },\n        gradientColors: [\n          \"rgba(66,134,121,0.15)\",\n          \"rgba(66,134,121,0.0)\",\n          \"rgba(66,134,121,0)\",\n        ],\n        gradientStops: [1, 0.4, 0],\n      },\n      \n    };\n\n    \n  },\n  computed: {\n    enableRTL() {\n      return this.$route.query.enableRTL;\n    },\n    isRTL() {\n      return this.$rtl.isRTL;\n    },\n    bigLineChartCategories() {\n      return this.$t(\"dashboard.chartCategories\");\n    },\n  },\n  methods: {\n    initBigChart(index) {\n      setInterval(() => {\n      let chartData = {\n        datasets: [\n          {\n            fill: true,\n            borderColor: config.colors.primary,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: config.colors.primary,\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: config.colors.primary,\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data:this.randomData,\n          },\n        ],\n        labels: [\n          \"\",\n          \"\",\n          \"\",\n          \"\",\n          \"\",\n          \"\",\n          \"\",\n          \"\",\n          \"\",\n          \"\",\n          \"\",\n          \"\",\n        ],\n      };\n      // this.$refs.bigChart.updateGradients(chartData);\n      this.bigLineChart.chartData = chartData;\n      // this.bigLineChart.activeIndex = index;\n       }, 1100);\n    },\n\n\n    initGreenChart1(index) {\n      setInterval(() => {\n      let chartData = {\n        \n          datasets: [\n            {\n              label: \"My First dataset\",\n              fill: true,\n              borderColor: config.colors.danger,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.danger,\n              pointBorderColor: \"rgba(255,255,255,0)\",\n              pointHoverBackgroundColor: config.colors.danger,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data:this.smallrandomData,\n            },\n          ],\n        }\n            // this.$refs.bigChart.updateGradients(chartData);\n      this.greenLineChart1.chartData = chartData;\n      // this.LineChart.activeIndex = index;\n       }, 1100);\n    },\n\n    initGreenChart2(index) {\n      setInterval(() => {\n      let chartData = {\n        \n          datasets: [\n            {\n              label: \"My First dataset\",\n              fill: true,\n              borderColor: config.colors.danger,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.danger,\n              pointBorderColor: \"rgba(255,255,255,0)\",\n              pointHoverBackgroundColor: config.colors.danger,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data:this.smallrandomData2,\n            },\n          ],\n        }\n            // this.$refs.bigChart.updateGradients(chartData);\n      this.greenLineChart2.chartData = chartData;\n      // this.LineChart.activeIndex = index;\n       }, 1100);\n    },\n\n    initGreenChart3(index) {\n      setInterval(() => {\n      let chartData = {\n        \n          datasets: [\n            {\n              label: \"My First dataset\",\n              fill: true,\n              borderColor: config.colors.danger,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.danger,\n              pointBorderColor: \"rgba(255,255,255,0)\",\n              pointHoverBackgroundColor: config.colors.danger,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data:this.smallrandomData,\n            },\n          ],\n        }\n            // this.$refs.bigChart.updateGradients(chartData);\n      this.greenLineChart3.chartData = chartData;\n      // this.LineChart.activeIndex = index;\n       }, 1100);\n    },\n\n\n\n    getUsage1(){\n      setInterval(() => {\n      var usage_list = [100, 200, 3000, 400, 550, 300, 400, 700, 676, 765, 233];\n      var random =  Math.floor(Math.random() * usage_list.length);\n      this.usage1 = usage_list[random];\n       }, 1100);\n    },\n    getUsage2(){\n      setInterval(() => {\n      var usage_list = [100, 200, 3000, 400, 550, 300, 400, 700, 676, 765, 233];\n      var random =  Math.floor(Math.random() * usage_list.length);\n      this.usage2 = usage_list[random];\n       }, 1100);\n    },\n    getUsage3(){\n      setInterval(() => {\n      var usage_list = [100, 200, 3000, 400, 550, 300, 400, 700, 676, 765, 233, 5000, 670, 563, 5498, 3874, 2763, 465, 579,];\n      var random =  Math.floor(Math.random() * usage_list.length);\n      this.usage3 = usage_list[random];\n       }, 1100);\n    },\n    \n    getUsage4(){\n      setInterval(() => {\n      var usage_list = [100, 200, 3000, 400, 550, 300, 400, 700, 676, 765, 233];\n      var random =  Math.floor(Math.random() * usage_list.length);\n      this.usage4 = usage_list[random];\n       }, 1100);\n    },\n\n    getTotal(){\n      setInterval(() => {\n      var total_list = [1075, 2043, 3423, 4411, 3423, 2324, 2427, 3424, 34242, 4322, 3434];\n     var random =  Math.floor(Math.random() * total_list.length);\n      this.total = total_list[random];\n       }, 1100);\n    },\n\n    getRandomDatapoints(){\n      setInterval(() => {\n      let i =0; \n      this.randomData =[];\n      for(i =0 ; i<12 ; i++)\n      {\n        let randnum = Math.floor(Math.random()*10000)\n        this.randomData.push(randnum);\n      }\n  \n      // console.log((this.randomData))\n      }, 2000);\n\n      \n    },\n\n    getRandomDatapointssmall(){\n      setInterval(() => {\n      let i =0; \n      this.smallrandomData =[];\n      for(i =0 ; i<6 ; i++)\n      {\n        let randnum = Math.floor(Math.random()*100)\n        this.smallrandomData.push(randnum);\n      }\n  \n      // console.log((this.randomData))\n      }, 2000);\n\n      \n    },\n\n    getRandomDatapointssmall2(){\n      setInterval(() => {\n      let i =0; \n      this.smallrandomData2 =[];\n      for(i =0 ; i<6 ; i++)\n      {\n        let randnum = Math.floor(Math.random()*100)\n        this.smallrandomData2.push(randnum);\n      }\n  \n      // console.log((this.randomData))\n      }, 2000);\n\n      \n    },\n\n    getRandomDatapointssmall3(){\n      setInterval(() => {\n      let i =0; \n      this.smallrandomData3 =[];\n      for(i =0 ; i<6 ; i++)\n      {\n        let randnum = Math.floor(Math.random()*100)\n        this.smallrandomData3.push(randnum);\n      }\n  \n      // console.log((this.randomData))\n      }, 2000);\n\n      \n    }\n\n\n\n  },\n  async mounted() {\n    try {\n      \n      \n      this.i18n = this.$i18n;\n      this.getRandomDatapoints();\n      this.getRandomDatapointssmall();\n      this.getRandomDatapointssmall2();\n      this.getRandomDatapointssmall3();\n      this.getUsage1();\n      this.getTotal();\n      this.getUsage2();\n      this.getUsage3();\n      this.getUsage4();\n      if (this.enableRTL) {\n        this.i18n.locale = \"ar\";\n        this.$rtl.enableRTL();\n      }\n      this.initBigChart(0);\n      this.initGreenChart1(0);\n      this.initGreenChart2(0);\n      this.initGreenChart3(0);\n\n    } catch(err){\n      console.log(err)\n    }\n    \n\n\n  },\n  beforeDestroy() {\n    if (this.$rtl.isRTL) {\n      this.i18n.locale = \"en\";\n      this.$rtl.disableRTL();\n    }\n  },\n};\n</script>\n<style>\n</style>\n"],"sourceRoot":"src/pages"}]}