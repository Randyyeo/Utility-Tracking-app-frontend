{"remainingRequest":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/babel-loader/lib/index.js!/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/src/api/API.js","dependencies":[{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/src/api/API.js","mtime":1636007570874},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/.babelrc","mtime":1635770927386},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/src/api/API.js"],"names":["axios","origin","setHeader","token","headers","API","updateProfile","data","post","addTip","findProfile","get","findTip","signin","signup","occupation","status","stripe","stripeupdate","stripeadd","addPost","findPost","specialProfile","specialTips"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,MAAM,GAAG,2CAAf;AACA;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAS;AACvB,SAAO;AACLC,IAAAA,OAAO,EAAC;AACE,sBAAgB,kBADlB;AAEE,uBAAiB,YAAWD;AAF9B;AADH,GAAP;AAMH,CAPD;;AASA,IAAME,GAAG,GAAG,EAAZ;;AAEAA,GAAG,CAACC,aAAJ;AAAA,qEAAoB,iBAAOC,IAAP,EAAaJ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACHH,KAAK,CAACQ,IAAN,WAAcP,MAAd,sBAAuCM,IAAvC,EAA6CL,SAAS,CAACC,KAAD,CAAtD,CADG;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAAA;AAAA;AAAA;AAAA;;AAIAE,GAAG,CAACI,MAAJ;AAAA,sEAAa,kBAAOF,IAAP,EAAaJ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACIH,KAAK,CAACQ,IAAN,WAAcP,MAAd,gBAAiCM,IAAjC,EAAuCL,SAAS,CAACC,KAAD,CAAhD,CADJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA;;AAIAE,GAAG,CAACK,WAAJ;AAAA,sEAAkB,kBAAOP,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACDH,KAAK,CAACW,GAAN,WAAaV,MAAb,oBAAoCC,SAAS,CAACC,KAAD,CAA7C,CADC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;;AAIAE,GAAG,CAACO,OAAJ;AAAA,sEAAc,kBAAOT,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGH,KAAK,CAACW,GAAN,WAAaV,MAAb,iBAAiCC,SAAS,CAACC,KAAD,CAA1C,CADH;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAAA;AAAA;AAAA;AAAA;;AAIAE,GAAG,CAACQ,MAAJ;AAAA,sEAAa,kBAAON,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEIP,KAAK,CAACQ,IAAN,WAAcP,MAAd,oBAAqCM,IAArC,EAA2CL,SAAS,EAApD,CAFJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA;;AAKAG,GAAG,CAACS,MAAJ;AAAA,sEAAa,kBAAOP,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACIP,KAAK,CAACQ,IAAN,WAAcP,MAAd,oBAAqCM,IAArC,EAA2CL,SAAS,EAApD,CADJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA;;AAIAG,GAAG,CAACF,KAAJ;AAAA,sEAAY,kBAAOA,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACKH,KAAK,CAACW,GAAN,WAAaV,MAAb,YAA4BC,SAAS,CAACC,KAAD,CAArC,CADL;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ;;AAAA;AAAA;AAAA;AAAA;;AAIAE,GAAG,CAACU,UAAJ;AAAA,sEAAiB,kBAAOR,IAAP,EAAaJ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACAH,KAAK,CAACQ,IAAN,WAAcP,MAAd,iCAAkDM,IAAlD,EAAwDL,SAAS,CAACC,KAAD,CAAjE,CADA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA;;AAIAE,GAAG,CAACW,MAAJ;AAAA,sEAAa,kBAAOT,IAAP,EAAaJ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACIH,KAAK,CAACQ,IAAN,WAAcP,MAAd,6BAA8CM,IAA9C,EAAoDL,SAAS,CAACC,KAAD,CAA7D,CADJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA;;AAIAE,GAAG,CAACY,MAAJ;AAAA,uEAAa,mBAAOd,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACIH,KAAK,CAACW,GAAN,WAAaV,MAAb,cAA8BC,SAAS,CAACC,KAAD,CAAvC,CADJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA;;AAIAE,GAAG,CAACa,YAAJ;AAAA,uEAAmB,mBAAOX,IAAP,EAAaJ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFH,KAAK,CAACQ,IAAN,WAAcP,MAAd,qBAAsCM,IAAtC,EAA4CL,SAAS,CAACC,KAAD,CAArD,CADE;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA;;AAIAE,GAAG,CAACc,SAAJ;AAAA,uEAAgB,mBAAOZ,IAAP,EAAaJ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACCH,KAAK,CAACQ,IAAN,WAAcP,MAAd,kBAAmCM,IAAnC,EAAyCL,SAAS,CAACC,KAAD,CAAlD,CADD;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA;;AAIAE,GAAG,CAACe,OAAJ;AAAA,uEAAc,mBAAOb,IAAP,EAAaJ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGH,KAAK,CAACQ,IAAN,WAAcP,MAAd,gBAAiCM,IAAjC,EAAuCL,SAAS,CAACC,KAAD,CAAhD,CADH;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAAA;AAAA;AAAA;AAAA;;AAIAE,GAAG,CAACgB,QAAJ;AAAA,uEAAe,mBAAOlB,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACEH,KAAK,CAACW,GAAN,WAAaV,MAAb,iBAAiCC,SAAS,CAACC,KAAD,CAA1C,CADF;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA;;AAIAE,GAAG,CAACiB,cAAJ;AAAA,uEAAqB,mBAAOf,IAAP,EAAaJ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJH,KAAK,CAACQ,IAAN,WAAcP,MAAd,oBAAqCM,IAArC,EAA2CL,SAAS,CAACC,KAAD,CAApD,CADI;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAAA;AAAA;AAAA;AAAA;;AAIAE,GAAG,CAACkB,WAAJ;AAAA,uEAAkB,mBAAOhB,IAAP,EAAaJ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACDH,KAAK,CAACQ,IAAN,WAAcP,MAAd,yBAA0CM,IAA1C,EAAgDL,SAAS,CAACC,KAAD,CAAzD,CADC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeE,GAAf","sourcesContent":["import axios from 'axios'\nconst origin = \"https://utility-backend-app.herokuapp.com\"\n/* const origin = \"http://localhost:4000\" */\n\nconst setHeader = (token)=>{\n    return {\n      headers:{\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer '+ token\n              }\n    }\n}\n\nconst API = {};\n\nAPI.updateProfile = async (data, token)=>{\n    return await axios.post(`${origin}/update/profile`, data, setHeader(token));\n}\n\nAPI.addTip = async (data, token)=>{\n    return await axios.post(`${origin}/add/tips`, data, setHeader(token));\n}\n\nAPI.findProfile = async (token)=>{\n    return await axios.get(`${origin}/find/profile`, setHeader(token));\n}\n\nAPI.findTip = async (token)=>{\n    return await axios.get(`${origin}/find/tips`, setHeader(token));\n}\n\nAPI.signin = async (data) => {\n    \n    return await axios.post(`${origin}/users/signin`, data, setHeader());\n}\n\nAPI.signup = async (data) => {\n    return await axios.post(`${origin}/users/signup`, data, setHeader());\n}\n\nAPI.token = async (token) => {\n    return await axios.get(`${origin}/auth`, setHeader(token))\n}\n\nAPI.occupation = async (data, token) => {\n    return await axios.post(`${origin}/update/profile/occupation`, data, setHeader(token))\n}\n\nAPI.status = async (data, token) => {\n    return await axios.post(`${origin}/update/profile/status`, data, setHeader(token))\n}\n\nAPI.stripe = async (token) => {\n    return await axios.get(`${origin}/stripe`, setHeader(token))\n}\n\nAPI.stripeupdate = async (data, token) => {\n    return await axios.post(`${origin}/stripe/update`, data, setHeader(token))\n}\n\nAPI.stripeadd = async (data, token) => {\n    return await axios.post(`${origin}/stripe/add`, data, setHeader(token))\n}\n\nAPI.addPost = async (data, token) => {\n    return await axios.post(`${origin}/add/post`, data, setHeader(token))\n}\n\nAPI.findPost = async (token) => {\n    return await axios.get(`${origin}/find/post`, setHeader(token))\n}\n\nAPI.specialProfile = async (data, token) => {\n    return await axios.post(`${origin}/find/special`, data, setHeader(token))\n}\n\nAPI.specialTips = async (data, token) => {\n    return await axios.post(`${origin}/find/special/tips`, data, setHeader(token))\n}\n\n\nexport default API;"]}]}