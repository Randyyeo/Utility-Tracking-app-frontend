{"remainingRequest":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/babel-loader/lib/index.js!/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/src/pages/LiveTracking.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/src/pages/LiveTracking.vue","mtime":1636378057363},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/.babelrc","mtime":1635770927386},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["LiveTracking.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0OA,OAAA,GAAA,MAAA,YAAA;AACA,OAAA,SAAA,MAAA,+BAAA;AACA,OAAA,QAAA,MAAA,8BAAA;AACA,OAAA,KAAA,YAAA,MAAA,4BAAA;AACA,OAAA,QAAA,MAAA,sBAAA;AACA,OAAA,SAAA,MAAA,uBAAA;AACA,OAAA,MAAA,MAAA,UAAA;AACA,SAAA,KAAA,QAAA,cAAA;AAIA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,QAAA,EAAA,QAFA;AAGA,IAAA,QAAA,EAAA,QAHA;AAIA,IAAA,SAAA,EAAA,SAJA;AAKA,IAAA,KAAA,EAAA;AALA,GADA;AAQA,EAAA,IARA,kBAQA;AAAA;;AACA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,cAAA,EAAA,EAFA;AAGA,MAAA,UAAA,EAAA;AAHA,0CAIA,EAJA,4CAKA,EALA,6CAMA,EANA,6CAOA,EAPA,kCAQA,EARA,mCASA,EATA,mCAUA,EAVA,mCAWA,EAXA,mCAYA,EAZA,mCAaA,KAbA,yCAgBA;AACA,MAAA,OAAA,EAAA,CACA,CAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CADA,EAEA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAFA,EAGA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,CAHA,CADA;AAMA;AACA,MAAA,SAAA,EAAA;AACA,QAAA,QAAA,EAAA,CAAA,EAAA,CADA;AAEA,QAAA,MAAA,EAAA,CACA,KADA,EAEA,KAFA,EAGA,KAHA,EAIA,KAJA,EAKA,KALA,EAMA,KANA,EAOA,KAPA,EAQA,KARA,EASA,KATA,EAUA,KAVA,EAWA,KAXA,EAYA,KAZA;AAFA,OAPA;AAwBA,MAAA,YAAA,EAAA,YAAA,CAAA,kBAxBA;AAyBA,MAAA,cAAA,EAAA,MAAA,CAAA,MAAA,CAAA,eAzBA;AA0BA,MAAA,aAAA,EAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CA1BA;AA2BA,MAAA,UAAA,EAAA;AA3BA,KAhBA,4CA8CA;AACA,MAAA,YAAA,EAAA,YAAA,CAAA,iBADA;AAEA,MAAA,SAAA,EAAA;AACA,QAAA,MAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CADA;AAEA,QAAA,QAAA,EAAA,CACA;AACA,UAAA,WAAA,EAAA,CADA;AAEA,UAAA,WAAA,EAAA,KAFA;AAGA,UAAA,KAAA,EAAA,kBAHA;AAIA,UAAA,IAAA,EAAA,IAJA;AAKA,UAAA,WAAA,EAAA,MAAA,CAAA,MAAA,CAAA,SALA;AAMA,UAAA,WAAA,EAAA,CANA;AAOA,UAAA,UAAA,EAAA,EAPA;AAQA,UAAA,gBAAA,EAAA,GARA;AASA,UAAA,oBAAA,EAAA,MAAA,CAAA,MAAA,CAAA,SATA;AAUA,UAAA,gBAAA,EAAA,qBAVA;AAWA,UAAA,yBAAA,EAAA,MAAA,CAAA,MAAA,CAAA,SAXA;AAYA,UAAA,gBAAA,EAAA,EAZA;AAaA,UAAA,gBAAA,EAAA,CAbA;AAcA,UAAA,qBAAA,EAAA,EAdA;AAeA,UAAA,WAAA,EAAA,CAfA;AAgBA,UAAA,IAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAhBA,SADA;AAFA,OAFA;AAyBA,MAAA,cAAA,EAAA,CACA,uBADA,EAEA,sBAFA,EAGA,oBAHA,CAzBA;AA8BA,MAAA,aAAA,EAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA;AA9BA,KA9CA,4CA+EA;AACA,MAAA,YAAA,EAAA,YAAA,CAAA,iBADA;AAEA,MAAA,SAAA,EAAA;AACA,QAAA,MAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,CADA;AAEA,QAAA,QAAA,EAAA,CACA;AACA,UAAA,KAAA,EAAA,kBADA;AAEA,UAAA,IAAA,EAAA,IAFA;AAGA,UAAA,WAAA,EAAA,MAAA,CAAA,MAAA,CAAA,SAHA;AAIA,UAAA,WAAA,EAAA,CAJA;AAKA,UAAA,UAAA,EAAA,EALA;AAMA,UAAA,gBAAA,EAAA,GANA;AAOA,UAAA,oBAAA,EAAA,MAAA,CAAA,MAAA,CAAA,SAPA;AAQA,UAAA,gBAAA,EAAA,qBARA;AASA,UAAA,yBAAA,EAAA,MAAA,CAAA,MAAA,CAAA,SATA;AAUA,UAAA,gBAAA,EAAA,EAVA;AAWA,UAAA,gBAAA,EAAA,CAXA;AAYA,UAAA,qBAAA,EAAA,EAZA;AAaA,UAAA,WAAA,EAAA,CAbA;AAcA,UAAA,IAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAdA,SADA;AAFA,OAFA;AAuBA,MAAA,cAAA,EAAA,CACA,uBADA,EAEA,sBAFA,EAGA,oBAHA,CAvBA;AA4BA,MAAA,aAAA,EAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA;AA5BA,KA/EA,4CA8GA;AACA,MAAA,YAAA,EAAA,YAAA,CAAA,iBADA;AAEA,MAAA,SAAA,EAAA;AACA,QAAA,MAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CADA;AAEA,QAAA,QAAA,EAAA,CACA;AACA,UAAA,KAAA,EAAA,kBADA;AAEA,UAAA,IAAA,EAAA,IAFA;AAGA,UAAA,WAAA,EAAA,MAAA,CAAA,MAAA,CAAA,SAHA;AAIA,UAAA,WAAA,EAAA,CAJA;AAKA,UAAA,UAAA,EAAA,EALA;AAMA,UAAA,gBAAA,EAAA,GANA;AAOA,UAAA,oBAAA,EAAA,MAAA,CAAA,MAAA,CAAA,SAPA;AAQA,UAAA,gBAAA,EAAA,qBARA;AASA,UAAA,yBAAA,EAAA,MAAA,CAAA,MAAA,CAAA,SATA;AAUA,UAAA,gBAAA,EAAA,EAVA;AAWA,UAAA,gBAAA,EAAA,CAXA;AAYA,UAAA,qBAAA,EAAA,EAZA;AAaA,UAAA,WAAA,EAAA,CAbA;AAcA,UAAA,IAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAdA,SADA;AAFA,OAFA;AAuBA,MAAA,cAAA,EAAA,CACA,uBADA,EAEA,sBAFA,EAGA,oBAHA,CAvBA;AA4BA,MAAA,aAAA,EAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA;AA5BA,KA9GA;AAgJA,GAzJA;AA0JA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA;AACA,KAHA;AAIA,IAAA,KAJA,mBAIA;AACA,aAAA,KAAA,IAAA,CAAA,KAAA;AACA,KANA;AAOA,IAAA,sBAPA,oCAOA;AACA,aAAA,KAAA,EAAA,CAAA,2BAAA,CAAA;AACA;AATA,GA1JA;AAqKA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,KADA,EACA;AAAA;;AACA,MAAA,WAAA,CAAA,YAAA;AACA,YAAA,SAAA,GAAA;AACA,UAAA,QAAA,EAAA,CACA;AACA,YAAA,WAAA,EAAA,CADA;AAEA,YAAA,WAAA,EAAA,KAFA;AAGA,YAAA,IAAA,EAAA,IAHA;AAIA,YAAA,WAAA,EAAA,MAAA,CAAA,MAAA,CAAA,SAJA;AAKA,YAAA,WAAA,EAAA,CALA;AAMA,YAAA,UAAA,EAAA,EANA;AAOA,YAAA,gBAAA,EAAA,GAPA;AAQA,YAAA,oBAAA,EAAA,MAAA,CAAA,MAAA,CAAA,SARA;AASA,YAAA,gBAAA,EAAA,qBATA;AAUA,YAAA,yBAAA,EAAA,MAAA,CAAA,MAAA,CAAA,SAVA;AAWA,YAAA,gBAAA,EAAA,EAXA;AAYA,YAAA,gBAAA,EAAA,CAZA;AAaA,YAAA,qBAAA,EAAA,EAbA;AAcA,YAAA,WAAA,EAAA,CAdA;AAeA,YAAA,IAAA,EAAA,KAAA,CAAA;AAfA,WADA,CADA;AAoBA,UAAA,MAAA,EAAA,KAAA,CAAA;AApBA,SAAA,CADA,CAuBA;;AACA,QAAA,KAAA,CAAA,YAAA,CAAA,SAAA,GAAA,SAAA,CAxBA,CAyBA;AACA,OA1BA,EA0BA,IA1BA,CAAA;AA2BA,KA7BA;AAgCA,IAAA,eAhCA,2BAgCA,KAhCA,EAgCA;AAAA;;AACA,MAAA,WAAA,CAAA,YAAA;AACA,YAAA,SAAA,GAAA;AAEA,UAAA,QAAA,EAAA,CACA;AACA,YAAA,WAAA,EAAA,CADA;AAEA,YAAA,WAAA,EAAA,KAFA;AAGA,YAAA,KAAA,EAAA,kBAHA;AAIA,YAAA,IAAA,EAAA,IAJA;AAKA,YAAA,WAAA,EAAA,MAAA,CAAA,MAAA,CAAA,SALA;AAMA,YAAA,WAAA,EAAA,CANA;AAOA,YAAA,UAAA,EAAA,EAPA;AAQA,YAAA,gBAAA,EAAA,GARA;AASA,YAAA,oBAAA,EAAA,MAAA,CAAA,MAAA,CAAA,SATA;AAUA,YAAA,gBAAA,EAAA,qBAVA;AAWA,YAAA,yBAAA,EAAA,MAAA,CAAA,MAAA,CAAA,SAXA;AAYA,YAAA,gBAAA,EAAA,EAZA;AAaA,YAAA,gBAAA,EAAA,CAbA;AAcA,YAAA,qBAAA,EAAA,EAdA;AAeA,YAAA,WAAA,EAAA,CAfA;AAgBA,YAAA,IAAA,EAAA,MAAA,CAAA;AAhBA,WADA,CAFA;AAqBA,UAAA,MAAA,EAAA,MAAA,CAAA;AArBA,SAAA,CADA,CAwBA;;AACA,QAAA,MAAA,CAAA,eAAA,CAAA,SAAA,GAAA,SAAA,CAzBA,CA0BA;AACA,OA3BA,EA2BA,IA3BA,CAAA;AA4BA,KA7DA;AA+DA,IAAA,eA/DA,2BA+DA,KA/DA,EA+DA;AAAA;;AACA,MAAA,WAAA,CAAA,YAAA;AACA,YAAA,SAAA,GAAA;AAEA,UAAA,QAAA,EAAA,CACA;AACA,YAAA,WAAA,EAAA,CADA;AAEA,YAAA,WAAA,EAAA,KAFA;AAGA,YAAA,KAAA,EAAA,kBAHA;AAIA,YAAA,IAAA,EAAA,IAJA;AAKA,YAAA,WAAA,EAAA,MAAA,CAAA,MAAA,CAAA,SALA;AAMA,YAAA,WAAA,EAAA,CANA;AAOA,YAAA,UAAA,EAAA,EAPA;AAQA,YAAA,gBAAA,EAAA,GARA;AASA,YAAA,oBAAA,EAAA,MAAA,CAAA,MAAA,CAAA,SATA;AAUA,YAAA,gBAAA,EAAA,qBAVA;AAWA,YAAA,yBAAA,EAAA,MAAA,CAAA,MAAA,CAAA,SAXA;AAYA,YAAA,gBAAA,EAAA,EAZA;AAaA,YAAA,gBAAA,EAAA,CAbA;AAcA,YAAA,qBAAA,EAAA,EAdA;AAeA,YAAA,WAAA,EAAA,CAfA;AAgBA,YAAA,IAAA,EAAA,MAAA,CAAA;AAhBA,WADA,CAFA;AAqBA,UAAA,MAAA,EAAA,MAAA,CAAA;AArBA,SAAA,CADA,CAwBA;;AACA,QAAA,MAAA,CAAA,eAAA,CAAA,SAAA,GAAA,SAAA,CAzBA,CA0BA;AACA,OA3BA,EA2BA,IA3BA,CAAA;AA4BA,KA5FA;AA8FA,IAAA,eA9FA,2BA8FA,KA9FA,EA8FA;AAAA;;AACA,MAAA,WAAA,CAAA,YAAA;AACA,YAAA,SAAA,GAAA;AAEA,UAAA,QAAA,EAAA,CACA;AACA,YAAA,WAAA,EAAA,CADA;AAEA,YAAA,WAAA,EAAA,KAFA;AAGA,YAAA,KAAA,EAAA,kBAHA;AAIA,YAAA,IAAA,EAAA,IAJA;AAKA,YAAA,WAAA,EAAA,MAAA,CAAA,MAAA,CAAA,SALA;AAMA,YAAA,WAAA,EAAA,CANA;AAOA,YAAA,UAAA,EAAA,EAPA;AAQA,YAAA,gBAAA,EAAA,GARA;AASA,YAAA,oBAAA,EAAA,MAAA,CAAA,MAAA,CAAA,SATA;AAUA,YAAA,gBAAA,EAAA,qBAVA;AAWA,YAAA,yBAAA,EAAA,MAAA,CAAA,MAAA,CAAA,SAXA;AAYA,YAAA,gBAAA,EAAA,EAZA;AAaA,YAAA,gBAAA,EAAA,CAbA;AAcA,YAAA,qBAAA,EAAA,EAdA;AAeA,YAAA,WAAA,EAAA,CAfA;AAgBA,YAAA,IAAA,EAAA,MAAA,CAAA;AAhBA,WADA,CAFA;AAqBA,UAAA,MAAA,EAAA,MAAA,CAAA;AArBA,SAAA,CADA,CAwBA;;AACA,QAAA,MAAA,CAAA,eAAA,CAAA,SAAA,GAAA,SAAA,CAzBA,CA0BA;AACA,OA3BA,EA2BA,IA3BA,CAAA;AA4BA,KA3HA;AA+HA,IAAA,SA/HA,uBA+HA;AAAA;;AACA,MAAA,WAAA,CAAA,YAAA;AACA,YAAA,UAAA,GAAA,CAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CAAA;AACA,YAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,UAAA,CAAA,MAAA,CAAA;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,UAAA,CAAA,MAAA,CAAA;AACA,OAJA,EAIA,IAJA,CAAA;AAKA,KArIA;AAsIA,IAAA,SAtIA,uBAsIA;AAAA;;AACA,MAAA,WAAA,CAAA,YAAA;AACA,YAAA,UAAA,GAAA,CAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CAAA;AACA,YAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,UAAA,CAAA,MAAA,CAAA;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,UAAA,CAAA,MAAA,CAAA;AACA,OAJA,EAIA,IAJA,CAAA;AAKA,KA5IA;AA6IA,IAAA,SA7IA,uBA6IA;AAAA;;AACA,MAAA,WAAA,CAAA,YAAA;AACA,YAAA,UAAA,GAAA,CAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,CAAA;AACA,YAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,UAAA,CAAA,MAAA,CAAA;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,UAAA,CAAA,MAAA,CAAA;AACA,OAJA,EAIA,IAJA,CAAA;AAKA,KAnJA;AAqJA,IAAA,SArJA,uBAqJA;AAAA;;AACA,MAAA,WAAA,CAAA,YAAA;AACA,YAAA,UAAA,GAAA,CAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CAAA;AACA,YAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,UAAA,CAAA,MAAA,CAAA;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,UAAA,CAAA,MAAA,CAAA;AACA,OAJA,EAIA,IAJA,CAAA;AAKA,KA3JA;AA6JA,IAAA,QA7JA,sBA6JA;AAAA;;AACA,MAAA,WAAA,CAAA,YAAA;AACA,YAAA,UAAA,GAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,CAAA;AACA,YAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,UAAA,CAAA,MAAA,CAAA;AACA,QAAA,MAAA,CAAA,KAAA,GAAA,UAAA,CAAA,MAAA,CAAA;AACA,OAJA,EAIA,IAJA,CAAA;AAKA,KAnKA;AAqKA,IAAA,mBArKA,iCAqKA;AAAA;;AAEA,UAAA,OAAA,GAAA,CAAA;AACA,WAAA,UAAA,GAAA,EAAA,CAHA,CAIA;;AACA,MAAA,WAAA,CAAA,YAAA;AAEA,QAAA,OAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAAA,CAAA;;AACA,QAAA,OAAA,CAAA,UAAA,CAAA,IAAA,CAAA,OAAA,EAHA,CAKA;;AACA,OANA,EAMA,IANA,CAAA;AAMA,KAhLA,CAkLA;AAlLA;AAsLA,IAAA,wBAtLA,sCAsLA;AAAA;;AACA,UAAA,OAAA,GAAA,CAAA;AACA,WAAA,eAAA,GAAA,EAAA,CAFA,CAGA;;AACA,MAAA,WAAA,CAAA,YAAA;AAEA,QAAA,OAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAAA,CAAA;;AACA,QAAA,OAAA,CAAA,eAAA,CAAA,IAAA,CAAA,OAAA,EAHA,CAKA;;AACA,OANA,EAMA,IANA,CAAA;AAMA,KAhMA;AAqMA,IAAA,yBArMA,uCAqMA;AAAA;;AACA,UAAA,OAAA,GAAA,CAAA;AACA,WAAA,gBAAA,GAAA,EAAA,CAFA,CAGA;;AACA,MAAA,WAAA,CAAA,YAAA;AAEA,QAAA,OAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAAA,CAAA;;AACA,QAAA,OAAA,CAAA,gBAAA,CAAA,IAAA,CAAA,OAAA,EAHA,CAKA;;AACA,OANA,EAMA,IANA,CAAA;AASA,KAlNA;AAoNA,IAAA,yBApNA,uCAoNA;AAAA;;AAEA,UAAA,OAAA,GAAA,CAAA;AACA,WAAA,gBAAA,GAAA,EAAA,CAHA,CAIA;;AACA,MAAA,WAAA,CAAA,YAAA;AAEA,QAAA,OAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAAA,CAAA;;AACA,QAAA,OAAA,CAAA,gBAAA,CAAA,IAAA,CAAA,OAAA,EAHA,CAKA;;AACA,OANA,EAMA,IANA,CAAA;AAQA,KAjOA;AAmOA,IAAA,SAnOA,uBAmOA;AACA,WAAA,MAAA,GAAA,IAAA;AACA,KArOA;AAsOA,IAAA,UAtOA,wBAsOA;AACA,WAAA,MAAA,GAAA,KAAA;AAGA,KA1OA;AA6OA,IAAA,YA7OA,0BA6OA;AAAA;;AACA,WAAA,SAAA,GAAA,EAAA,CADA,CAEA;AAEA;;AACA,MAAA,WAAA,CAAA,YAAA;AACA,YAAA,KAAA,GAAA,IAAA,IAAA,EAAA;AACA,YAAA,IAAA,GAAA,KAAA,CAAA,QAAA,KAAA,GAAA,GAAA,KAAA,CAAA,UAAA,EAAA,GAAA,GAAA,GAAA,KAAA,CAAA,UAAA,EAAA;;AACA,QAAA,OAAA,CAAA,SAAA,CAAA,IAAA,CAAA,IAAA,EAHA,CAKA;;AACA,OANA,EAMA,IANA,CAAA;AAMA,KAxPA;AA4PA,IAAA,iBA5PA,+BA4PA;AAAA;;AACA,WAAA,cAAA,GAAA,EAAA,CADA,CAEA;AAEA;;AACA,MAAA,WAAA,CAAA,YAAA;AACA,YAAA,KAAA,GAAA,IAAA,IAAA,EAAA;AACA,YAAA,IAAA,GAAA,KAAA,CAAA,QAAA,KAAA,GAAA,GAAA,KAAA,CAAA,UAAA,EAAA,GAAA,GAAA,GAAA,KAAA,CAAA,UAAA,EAAA;;AACA,QAAA,OAAA,CAAA,cAAA,CAAA,IAAA,CAAA,IAAA,EAHA,CAKA;;AACA,OANA,EAMA,IANA,CAAA;AAMA;AAvQA,GArKA;AAkbA,EAAA,OAlbA,qBAkbA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,cAAA,KADA,GACA,MAAA,CAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CADA;AAAA;AAAA;AAAA,qBAKA,GAAA,CAAA,WAAA,CAAA,KAAA,CALA;;AAAA;AAKA,cAAA,IALA;AAMA,cAAA,IANA,GAMA,IAAA,CAAA,IAAA,CAAA,CAAA,CANA,CAMA,IANA;;AAAA,kBAOA,IAPA;AAAA;AAAA;AAAA;;AAQA,cAAA,OAAA,CAAA,MAAA,GAAA,IAAA;AARA;AAAA,qBASA,GAAA,CAAA,WAAA,CAAA;AAAA,gBAAA,IAAA,EAAA;AAAA,eAAA,EAAA,KAAA,CATA;;AAAA;AASA,cAAA,MATA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAcA,cAAA,OAAA,CAAA,GAAA;;AAdA;AAgBA,kBAAA;AAGA,gBAAA,OAAA,CAAA,IAAA,GAAA,OAAA,CAAA,KAAA;;AACA,gBAAA,OAAA,CAAA,mBAAA;;AACA,gBAAA,OAAA,CAAA,wBAAA;;AACA,gBAAA,OAAA,CAAA,yBAAA;;AACA,gBAAA,OAAA,CAAA,yBAAA;;AACA,gBAAA,OAAA,CAAA,YAAA;;AACA,gBAAA,OAAA,CAAA,iBAAA;;AACA,gBAAA,OAAA,CAAA,SAAA;;AACA,gBAAA,OAAA,CAAA,QAAA;;AACA,gBAAA,OAAA,CAAA,SAAA;;AACA,gBAAA,OAAA,CAAA,SAAA;;AACA,gBAAA,OAAA,CAAA,SAAA;;AACA,oBAAA,OAAA,CAAA,SAAA,EAAA;AACA,kBAAA,OAAA,CAAA,IAAA,CAAA,MAAA,GAAA,IAAA;;AACA,kBAAA,OAAA,CAAA,IAAA,CAAA,SAAA;AACA;;AACA,gBAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,gBAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;AACA,gBAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;AACA,gBAAA,OAAA,CAAA,eAAA,CAAA,CAAA;AAEA,eAxBA,CAwBA,OAAA,GAAA,EAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA;;AA1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8CA,GAheA;AAieA,EAAA,aAjeA,2BAieA;AACA,QAAA,KAAA,IAAA,CAAA,KAAA,EAAA;AACA,WAAA,IAAA,CAAA,MAAA,GAAA,IAAA;AACA,WAAA,IAAA,CAAA,UAAA;AACA;AACA;AAteA,CAAA","sourcesContent":["<template>\n\n  <div>\n    <div v-if=\"xModal\">\n          <modal class=\"my-modal\"\n            :show.sync=\"xModal\"\n            :centered=\"false\"\n            :show-close=\"true\"\n          >\n            <template v-slot:header class='bg-gradient-dark'>\n              \n            </template>\n              <h2 class='text-success'>This is the Live Tracking Page</h2>\n\n            <h4>Under this page, you will be able to view your utility at real time.</h4>\n            \n            <br>\n            <h4 class='text-primary'>Click anywhere to continue </h4>\n                      \n            <template v-slot:close-button>\n            </template>\n          </modal>\n           </div>\n    <div class=\"row\">\n      <div class=\"col-xl-3 col-md-6 d-flex text-white\">\n        <card class=\"card-body flex-fill\">\n          <div>\n            <div class=\"row\">\n              <div class=\"col-5\">\n                <div class=\"icon-big text-success\">\n                  <i class=\"tim-icons tim-icons-32 icon-atom text-success\"></i>\n                </div>\n              </div>\n              <div class=\"col-7\">\n                <div class=\"numbers text-white\">\n                  <p>Television</p>\n                  {{usage1}} kwH\n                </div>\n              </div>\n            </div>\n            <div>\n              <hr />\n              <div class=\"stats text-white\">\n            \n                <i class=\"tim-icons icon-refresh-02\"></i> Updating Live</div>\n              \n            </div>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-xl-3 col-md-6 d-flex text-white \">\n        <card class=\"card-body flex-fill\">\n          <div>\n            <div class=\"row\">\n              <div class=\"col-5\">\n                <div class=\"icon-big text-center\">\n                  <i class=\"tim-icons tim-icons-32 icon-mobile text-success\"></i>\n                </div>\n              </div>\n              <div class=\"col-7\">\n                <div class=\"numbers\">\n                  <p>Electrical Stove</p>\n                  {{usage2}} kwH\n                </div>\n              </div>\n            </div>\n            <div>\n              <hr />\n              <div class=\"stats\"><i class=\"tim-icons icon-refresh-02\"></i> Updating Live</div>\n            </div>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-xl-3 col-md-6 d-flex text-white\" >\n        <card class=\"card-body flex-fill\" >\n          <div>\n            <div class=\"row\">\n              <div class=\"col-5\">\n                <div class=\"icon-large text-center\">\n                  <i class=\"tim-icons tim-icons-32 icon-spaceship text-success \"></i>\n                </div>\n              </div>\n              <div class=\"col-7 \">\n                <div class=\"numbers \">\n                  <p>Oven</p>\n                  {{usage3}} kwH\n                </div>\n              </div>\n            </div>\n            <div>\n              <hr />\n              <div class=\"stats\"><i class=\"tim-icons icon-refresh-02\"></i> Updating Live</div>\n            </div>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-xl-3 col-md-6 d-flex text-white\">\n        <card class=\"card-body flex-fill \">\n          <div>\n            <div class=\"row\">\n              <div class=\"col-5\">\n                <div class=\"icon-big text-center\">\n                  <i class=\"tim-icons tim-icons-32 icon-laptop text-success\"></i>\n                </div>\n              </div>\n              <div class=\"col-7\">\n                <div class=\"numbers\">\n                  <p>Air-Conditioner</p>\n                  {{usage4}} kwH\n                </div>\n              </div>\n            </div>\n            <div>\n              <hr />\n              <div class=\"stats\"><i class=\"tim-icons icon-refresh-01\"></i> Updating Live</div>\n            </div>\n          </div>\n        </card>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <div class=\"row\">\n              <!-- big line graph -->\n              <div class=\"col-sm-6\" :class=\"isRTL ? 'text-right' : 'text-left'\">\n                <h5 class=\"card-category text-white\">\n                  {{ $t(\"dashboard.totalShipments\") }}\n                </h5>\n                <h2 class=\"card-title\">{{ $t(\"dashboard.monthlyUtilConsumption\") }}: {{total}} </h2>\n              </div>\n              <div class=\"col-sm-6\">\n                <div\n                  class=\"btn-group btn-group-toggle\"\n                  :class=\"isRTL ? 'float-left' : 'float-right'\"\n                  data-toggle=\"buttons\"\n                >\n                  \n                </div>\n              </div>\n            </div>\n          </template>\n\n\n          <div class=\"chart-area\">\n            <line-chart\n              style=\"height: 100%\"\n              ref=\"bigChart\"\n              chart-id=\"big-line-chart\"\n              :chart-data=\"bigLineChart.chartData\"\n              :gradient-colors=\"bigLineChart.gradientColors\"\n              :gradient-stops=\"bigLineChart.gradientStops\"\n              :extra-options=\"bigLineChart.extraOptions\"\n            >\n            </line-chart>\n          </div>\n        </card>\n      </div>\n    </div>\n    <div class=\"row\">\n<!-- first mini line graph -->\n      <div class=\"col-xl-4 col-md-12 \" :class=\"{ 'text-right': isRTL }\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h5 class=\"card-category text-white\">{{ $t(\"dashboard.electricityBreakdown\") }}</h5>\n            <h3 class=\"card-title \">\n              <i class=\"fas fa-bolt text-success\"></i> {{usage1}}\n            </h3>\n          </template>\n          <div class=\"chart-area\">\n            <line-chart\n              style=\"height: 100%\"\n              chart-id=\"green-line-chart\"\n              :chart-data=\"greenLineChart1.chartData\"\n              :gradient-stops=\"greenLineChart1.gradientStops\"\n              :extra-options=\"greenLineChart1.extraOptions\"\n            >\n            </line-chart>\n          </div>\n        </card>\n      </div>\n\n    <!-- second mini line graph -->\n\n      <div class=\"col-xl-4 col-md-12\" :class=\"{ 'text-right': isRTL }\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h5 class=\"card-category text-white\">{{ $t(\"dashboard.waterBreakdown\") }}</h5>\n            <h3 class=\"card-title\">\n              <i class=\"fa fa-tint text-success\"></i> {{usage2}}\n            </h3>\n          </template>\n          <div class=\"chart-area\">\n            <line-chart\n              style=\"height: 100%\"\n              chart-id=\"green-line-chart\"\n              :chart-data=\"greenLineChart2.chartData\"\n              :gradient-stops=\"greenLineChart2.gradientStops\"\n              :extra-options=\"greenLineChart2.extraOptions\"\n            >\n            </line-chart>\n          </div>\n        </card>\n      </div>\n\n<!-- third mini line graph-->\n\n      <div class=\"col-xl-4 col-md-12 \" :class=\"{ 'text-right': isRTL }\">\n        <card type=\"chart \">\n          <template slot=\"header\">\n            <h5 class=\"card-category text-white\">{{ $t(\"dashboard.gasBreakdown\") }}</h5>\n            <h3 class=\"card-title\">\n              <i class=\"fas fa-burn text-success\"></i> {{usage3}}\n            </h3>\n          </template>\n\n          <div class=\"chart-area\">\n            <line-chart\n              style=\"height: 100%\"\n              chart-id=\"green-line-chart\"\n              :chart-data=\"greenLineChart3.chartData\"\n              :gradient-stops=\"greenLineChart3.gradientStops\"\n              :extra-options=\"greenLineChart3.extraOptions\"\n            >\n            </line-chart>\n          </div>\n        </card>\n      </div>\n    </div>\n    \n  </div>\n</template>\n<script>\nimport API from '../api/API'\nimport LineChart from \"@/components/Charts/LineChart\";\nimport BarChart from \"@/components/Charts/BarChart\";\nimport * as chartConfigs from \"@/components/Charts/config\";\nimport TaskList from \"./Dashboard/TaskList\";\nimport UserTable from \"./Dashboard/UserTable\";\nimport config from \"@/config\";\nimport { Modal } from \"@/components\";\n\n\n\nexport default {\n  components: {\n    LineChart,\n    BarChart,\n    TaskList,\n    UserTable,\n    Modal\n  },\n  data() {\n    return {\n      timeLabel :[],\n      smalltimeLabel :[],\n      randomData:[],\n      timeLabel :[],\n      smallrandomData:[],\n      smallrandomData2:[],\n      smallrandomData3:[],\n      total:'',\n      usage1:'',\n      usage2:'',\n      usage3:'',\n      usage4:'',\n      xModal: false,\n    \n      \n      bigLineChart: {\n        allData: [\n          [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110],\n          [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120],\n          [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130],\n        ],\n        // activeIndex: 0,\n        chartData: {\n          datasets: [{}],\n          labels: [\n            \"JAN\",\n            \"FEB\",\n            \"MAR\",\n            \"APR\",\n            \"MAY\",\n            \"JUN\",\n            \"JUL\",\n            \"AUG\",\n            \"SEP\",\n            \"OCT\",\n            \"NOV\",\n            \"DEC\",\n          ],\n        },\n        extraOptions: chartConfigs.purpleChartOptions,\n        gradientColors: config.colors.primaryGradient,\n        gradientStops: [1, 0.4, 0],\n        categories: [],\n      },\n      \n      greenLineChart1: {\n        extraOptions: chartConfigs.greenChartOptions,\n        chartData: {\n          labels: [\"\", \"\", \"\", \"\", \"\"],\n          datasets: [\n            {\n              lineTension :0,\n              bezierCurve: false, \n              label: \"My First dataset\",\n              fill: true,\n              borderColor: config.colors.secondary,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.secondary,\n              pointBorderColor: \"rgba(255,255,255,0)\",\n              pointHoverBackgroundColor: config.colors.secondary,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 0,\n              data: [90, 27, 60, 12, 80],\n            },\n          ],\n        },\n        gradientColors: [\n          \"rgba(66,134,121,0.15)\",\n          \"rgba(66,134,121,0.0)\",\n          \"rgba(66,134,121,0)\",\n        ],\n        gradientStops: [1, 0.4, 0],\n      },\n      \n      greenLineChart2: {\n        extraOptions: chartConfigs.greenChartOptions,\n        chartData: {\n          labels: [\"\", \"\", \"\", \"\", \"git\"],\n          datasets: [\n            {\n              label: \"My First dataset\",\n              fill: true,\n              borderColor: config.colors.secondary,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.secondary,\n              pointBorderColor: \"rgba(255,255,255,0)\",\n              pointHoverBackgroundColor: config.colors.secondary,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [90, 27, 60, 12, 80],\n            },\n          ],\n        },\n        gradientColors: [\n          \"rgba(66,134,121,0.15)\",\n          \"rgba(66,134,121,0.0)\",\n          \"rgba(66,134,121,0)\",\n        ],\n        gradientStops: [1, 0.4, 0],\n      },\n      \n      greenLineChart3: {\n        extraOptions: chartConfigs.greenChartOptions,\n        chartData: {\n          labels: [\"\", \"\", \"\", \"\", \"\"],\n          datasets: [\n            {\n              label: \"My First dataset\",\n              fill: true,\n              borderColor: config.colors.secondary,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.secondary,\n              pointBorderColor: \"rgba(255,255,255,0)\",\n              pointHoverBackgroundColor: config.colors.secondary,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [90, 27, 60, 12, 80],\n            },\n          ],\n        },\n        gradientColors: [\n          \"rgba(66,134,121,0.15)\",\n          \"rgba(66,134,121,0.0)\",\n          \"rgba(66,134,121,0)\",\n        ],\n        gradientStops: [1, 0.4, 0],\n      },\n      \n    };\n\n    \n  },\n  computed: {\n    enableRTL() {\n      return this.$route.query.enableRTL;\n    },\n    isRTL() {\n      return this.$rtl.isRTL;\n    },\n    bigLineChartCategories() {\n      return this.$t(\"dashboard.chartCategories\");\n    },\n  },\n  methods: {\n    initBigChart(index) {\n      setInterval(() => {\n      let chartData = {\n        datasets: [\n          {\n            lineTension :0,\n            bezierCurve: false, \n            fill: true,\n            borderColor: config.colors.secondary,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: config.colors.secondary,\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: config.colors.secondary,\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 1,\n            data:this.randomData\n          },\n        ],\n        labels: this.timeLabel\n      };\n      // this.$refs.bigChart.updateGradients(chartData);\n      this.bigLineChart.chartData = chartData;\n      // this.bigLineChart.activeIndex = index;\n       }, 1100);\n    },\n\n\n    initGreenChart1(index) {\n      setInterval(() => {\n      let chartData = {\n        \n          datasets: [\n            {\n              lineTension :0,\n            bezierCurve: false, \n              label: \"My First dataset\",\n              fill: true,\n              borderColor: config.colors.secondary,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.secondary,\n              pointBorderColor: \"rgba(255,255,255,0)\",\n              pointHoverBackgroundColor: config.colors.secondary,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 1,\n              data:this.smallrandomData,\n            },\n          ],labels: this.smalltimeLabel\n        }\n            // this.$refs.bigChart.updateGradients(chartData);\n      this.greenLineChart1.chartData = chartData;\n      // this.LineChart.activeIndex = index;\n       }, 1100);\n    },\n\n    initGreenChart2(index) {\n      setInterval(() => {\n      let chartData = {\n        \n          datasets: [\n            {\n              lineTension :0,\n            bezierCurve: false, \n              label: \"My First dataset\",\n              fill: true,\n              borderColor: config.colors.secondary,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.secondary,\n              pointBorderColor: \"rgba(255,255,255,0)\",\n              pointHoverBackgroundColor: config.colors.secondary,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 1,\n              data:this.smallrandomData2,\n            },\n          ],labels: this.smalltimeLabel\n        }\n            // this.$refs.bigChart.updateGradients(chartData);\n      this.greenLineChart2.chartData = chartData;\n      // this.LineChart.activeIndex = index;\n       }, 1100);\n    },\n\n    initGreenChart3(index) {\n      setInterval(() => {\n      let chartData = {\n        \n          datasets: [\n            {\n              lineTension :0,\n            bezierCurve: false, \n              label: \"My First dataset\",\n              fill: true,\n              borderColor: config.colors.secondary,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.secondary,\n              pointBorderColor: \"rgba(255,255,255,0)\",\n              pointHoverBackgroundColor: config.colors.secondary,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 1,\n              data:this.smallrandomData3,\n            },\n          ],labels: this.smalltimeLabel\n        }\n            // this.$refs.bigChart.updateGradients(chartData);\n      this.greenLineChart3.chartData = chartData;\n      // this.LineChart.activeIndex = index;\n       }, 1100);\n    },\n\n\n\n    getUsage1(){\n      setInterval(() => {\n      var usage_list = [100, 200, 3000, 400, 550, 300, 400, 700, 676, 765, 233];\n      var random =  Math.floor(Math.random() * usage_list.length);\n      this.usage1 = usage_list[random];\n       }, 1100);\n    },\n    getUsage2(){\n      setInterval(() => {\n      var usage_list = [100, 200, 3000, 400, 550, 300, 400, 700, 676, 765, 233];\n      var random =  Math.floor(Math.random() * usage_list.length);\n      this.usage2 = usage_list[random];\n       }, 1100);\n    },\n    getUsage3(){\n      setInterval(() => {\n      var usage_list = [100, 200, 3000, 400, 550, 300, 400, 700, 676, 765, 233, 5000, 670, 563, 5498, 3874, 2763, 465, 579,];\n      var random =  Math.floor(Math.random() * usage_list.length);\n      this.usage3 = usage_list[random];\n       }, 1100);\n    },\n    \n    getUsage4(){\n      setInterval(() => {\n      var usage_list = [100, 200, 3000, 400, 550, 300, 400, 700, 676, 765, 233];\n      var random =  Math.floor(Math.random() * usage_list.length);\n      this.usage4 = usage_list[random];\n       }, 1100);\n    },\n\n    getTotal(){\n      setInterval(() => {\n      var total_list = [1075, 2043, 3423, 4411, 3423, 2324, 2427, 3424, 34242, 4322, 3434];\n     var random =  Math.floor(Math.random() * total_list.length);\n      this.total = total_list[random];\n       }, 1100);\n    },\n\n    getRandomDatapoints(){\n     \n      let randnum =0\n      this.randomData =[]\n      // while (this.randomData.length <10){\n      setInterval(() => {\n        \n           randnum = Math.floor(Math.random()*100);\n           this.randomData.push(randnum)\n        \n      // console.log((this.randomData))\n      }, 1100)}\n      \n      // this.randomData =[]}\n      \n    ,\n\n    getRandomDatapointssmall(){\n      let randnum =0\n      this.smallrandomData =[]\n      // while (this.randomData.length <10){\n      setInterval(() => {\n        \n           randnum = Math.floor(Math.random()*100);\n           this.smallrandomData.push(randnum)\n        \n      // console.log((this.randomData))\n      }, 1100)}\n\n      \n    ,\n\n    getRandomDatapointssmall2(){\n      let randnum =0\n      this.smallrandomData2 =[]\n      // while (this.randomData.length <10){\n      setInterval(() => {\n        \n           randnum = Math.floor(Math.random()*100);\n           this.smallrandomData2.push(randnum)\n        \n      // console.log((this.randomData))\n      }, 1100);\n\n      \n    },\n\n    getRandomDatapointssmall3(){\n    \n      let randnum =0\n      this.smallrandomData3 =[]\n      // while (this.randomData.length <10){\n      setInterval(() => {\n        \n           randnum = Math.floor(Math.random()*100);\n           this.smallrandomData3.push(randnum)\n        \n      // console.log((this.randomData))\n      }, 1100)\n\n    },\n\n      showModal() {\n      this.xModal = true;\n    },\n    closeModal() {\n      this.xModal = false;\n\n      \n    },\n\n\n    getTimeLabel(){\n      this.timeLabel =[]\n      // randnum = 0\n\n      // while (this.randomData.length <10){\n      setInterval(() => {\n        var today = new Date()\n        var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds()\n        this.timeLabel.push(time)\n      \n      // console.log((this.randomData))\n      }, 1100)},\n\n\n\n    getSmallTimeLabel(){\n      this.smalltimeLabel =[]\n      // randnum = 0\n\n      // while (this.randomData.length <10){\n      setInterval(() => {\n        var today = new Date()\n        var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds()\n        this.smalltimeLabel.push(time)\n      \n      // console.log((this.randomData))\n      }, 1100)},\n      \n\n\n\n  },\n  async mounted() {\n    const token = window.localStorage.getItem(\"token\");\n    try {\n      \n      \n        const res1 = await API.findProfile(token)\n        const { live } = res1.data[0]\n        if (!live){\n          this.xModal = true\n          const result = await API.updateFirst({live: true}, token)\n        } \n      \n      \n    } catch (error) {\n      console.log(error)\n    }\n    try {\n      \n      \n      this.i18n = this.$i18n;\n      this.getRandomDatapoints();\n      this.getRandomDatapointssmall();\n      this.getRandomDatapointssmall2();\n      this.getRandomDatapointssmall3();\n      this.getTimeLabel();\n      this.getSmallTimeLabel();\n      this.getUsage1();\n      this.getTotal();\n      this.getUsage2();\n      this.getUsage3();\n      this.getUsage4();\n      if (this.enableRTL) {\n        this.i18n.locale = \"ar\";\n        this.$rtl.enableRTL();\n      }\n      this.initBigChart(0);\n      this.initGreenChart1(0);\n      this.initGreenChart2(0);\n      this.initGreenChart3(0);\n\n    } catch(err){\n      console.log(err)\n    }\n    \n\n\n  },\n  beforeDestroy() {\n    if (this.$rtl.isRTL) {\n      this.i18n.locale = \"en\";\n      this.$rtl.disableRTL();\n    }\n  },\n};\n</script>\n<style>\n .my-modal{\n    text-align: center;\n  }\n</style>\n"],"sourceRoot":"src/pages"}]}