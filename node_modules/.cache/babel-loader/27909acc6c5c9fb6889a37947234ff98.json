{"remainingRequest":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/babel-loader/lib/index.js!/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/src/pages/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/src/pages/Dashboard.vue","mtime":1636680504974},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/.babelrc","mtime":1635770927386},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/randallyeo/Desktop/Desktop Items/Y2/Y2S1/WAD2/project/project_deployment/utbuddy_frontend_deploy/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqRA,OAAA,QAAA,MAAA,8BAAA;AACA,OAAA,aAAA,MAAA,mCAAA;AACA,OAAA,KAAA,YAAA,MAAA,4BAAA;AACA,OAAA,QAAA,MAAA,sBAAA;AACA,OAAA,SAAA,MAAA,uBAAA;AACA,OAAA,MAAA,MAAA,UAAA;AACA,OAAA,GAAA,MAAA,YAAA;AACA,SAAA,KAAA,QAAA,cAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA,QADA;AAEA,IAAA,QAAA,EAAA,QAFA;AAGA,IAAA,SAAA,EAAA,SAHA;AAIA,IAAA,aAAA,EAAA,aAJA;AAKA,IAAA,KAAA,EAAA;AALA,GADA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,IAFA;AAGA,MAAA,QAAA,EAAA,IAHA;AAIA,MAAA,MAAA,EAAA,IAJA;AAKA,MAAA,SAAA,EAAA,KALA;AAMA,MAAA,QAAA,EAAA,CANA;AAOA,MAAA,QAAA,EAAA,EAPA;AAQA,MAAA,KAAA,EAAA,EARA;AASA,MAAA,YAAA,EAAA,EATA;AAUA,MAAA,SAAA,EAAA,EAVA;AAWA,MAAA,UAAA,EAAA,EAXA;AAYA,MAAA,IAAA,EAAA,EAZA;AAaA,MAAA,IAAA,EAAA,EAbA;AAcA,MAAA,IAAA,EAAA,EAdA;AAeA,MAAA,mBAAA,EAAA;AACA,QAAA,YAAA,EAAA,YAAA,CAAA,oBADA;AAEA,QAAA,SAAA,EAAA;AACA,UAAA,MAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,IAAA,EAAA,cAAA,EAAA,QAAA,CADA;AAEA,UAAA,QAAA,EAAA,CACA;AACA,YAAA,KAAA,EAAA,aADA;AAEA,YAAA,IAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,CAFA;AAGA,YAAA,eAAA,EAAA,CACA,oBADA,EAEA,oBAFA,EAGA,kBAHA,EAIA,iBAJA,EAKA,iBALA,CAHA;AAUA,YAAA,SAAA,EAAA,KAVA;AAWA,YAAA,WAAA,EAAA;AAXA,WADA;AAFA;AAFA,OAfA;AAoCA,MAAA,aAAA,EAAA;AACA,QAAA,YAAA,EAAA,YAAA,CAAA,oBADA;AAEA,QAAA,SAAA,EAAA;AACA,UAAA,MAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,SAAA,CADA;AAEA,UAAA,QAAA,EAAA,CACA;AACA,YAAA,KAAA,EAAA,OADA;AAEA,YAAA,IAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAFA;AAGA,YAAA,eAAA,EAAA,CACA,mBADA,EAEA,iBAFA,EAGA,oBAHA,EAIA,oBAJA,CAHA;AASA,YAAA,SAAA,EAAA,KATA;AAUA,YAAA,WAAA,EAAA;AAVA,WADA;AAFA;AAFA,OApCA;AAwDA,MAAA,WAAA,EAAA;AACA,QAAA,YAAA,EAAA,YAAA,CAAA,oBADA;AAEA,QAAA,SAAA,EAAA;AACA,UAAA,MAAA,EAAA,CAAA,SAAA,EAAA,SAAA,EAAA,SAAA,CADA;AAEA,UAAA,QAAA,EAAA,CACA;AACA,YAAA,KAAA,EAAA,KADA;AAEA,YAAA,IAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAFA;AAGA,YAAA,eAAA,EAAA,CACA,oBADA,EAEA,oBAFA,EAGA,oBAHA,CAHA;AAQA,YAAA,SAAA,EAAA,KARA;AASA,YAAA,WAAA,EAAA;AATA,WADA;AAFA;AAFA,OAxDA;AA2EA,MAAA,WAAA,EAAA;AACA,QAAA,OAAA,EAAA,EADA;AAEA,QAAA,WAAA,EAAA,CAFA;AAGA,QAAA,SAAA,EAAA;AACA,UAAA,QAAA,EAAA,CAAA,EAAA,CADA;AAEA,UAAA,MAAA,EAAA;AAFA,SAHA;AAOA,QAAA,YAAA,EAAA,YAAA,CAAA,kBAPA;AAQA,QAAA,cAAA,EAAA,MAAA,CAAA,MAAA,CAAA,eARA;AASA,QAAA,aAAA,EAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CATA;AAUA,QAAA,UAAA,EAAA;AAVA;AA3EA,KAAA;AAwFA,GAjGA;AAkGA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA;AACA,KAHA;AAIA,IAAA,KAJA,mBAIA;AACA,aAAA,KAAA,IAAA,CAAA,KAAA;AACA,KANA;AAOA,IAAA,qBAPA,mCAOA;AACA,aAAA,KAAA,EAAA,CAAA,2BAAA,CAAA;AACA,KATA;AAUA,IAAA,MAVA,oBAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KADA,GACA,MAAA,CAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CADA;AAEA,gBAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AAFA;AAAA;AAAA,uBAIA,GAAA,CAAA,MAAA,CAAA,KAAA,CAJA;;AAAA;AAIA,gBAAA,IAJA;AAKA,gBAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AALA;AAAA;;AAAA;AAAA;AAAA;AAOA,gBAAA,OAAA,CAAA,GAAA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAnBA,GAlGA;AAuHA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,2BACA,KADA,EACA;AACA,UAAA,OAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;;AACA,WAAA,IAAA,CAAA,GAAA,KAAA,YAAA,GAAA,CAAA,EAAA,CAAA,GAAA,EAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,MAAA,GAAA,QAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,OAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,cAAA,CAAA,IAAA,OAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,YAAA,OAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,MAAA;AACA,WAFA,MAEA;AACA,gBAAA,IAAA,GAAA,UAAA,CACA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,MAAA,MAAA,GAAA,GAAA,GAAA,EAAA,CAAA,EAAA,OAAA,CAAA,CAAA,CADA,CAAA;AAGA,YAAA,OAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA;AACA,YAAA,MAAA,GAAA,MAAA,GAAA,IAAA;AACA;AACA;AACA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,YAAA,GAAA,CAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,MAAA,GAAA,QAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,OAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,cAAA,CAAA,IAAA,OAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,YAAA,OAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,MAAA;AACA,WAFA,MAEA;AACA,gBAAA,IAAA,GAAA,UAAA,CACA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,MAAA,MAAA,GAAA,GAAA,GAAA,EAAA,CAAA,EAAA,OAAA,CAAA,CAAA,CADA,CAAA;AAGA,YAAA,OAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA;AACA,YAAA,MAAA,GAAA,MAAA,GAAA,IAAA;AACA;AACA;AACA;;AAEA,WAAA,WAAA,CAAA,OAAA,GAAA,OAAA;AACA,KAjCA;AAkCA,IAAA,YAlCA,wBAkCA,KAlCA,EAkCA;AACA,UAAA,UAAA,GAAA,CACA,KADA,EAEA,KAFA,EAGA,KAHA,EAIA,KAJA,EAKA,KALA,EAMA,KANA,EAOA,KAPA,EAQA,KARA,EASA,KATA,EAUA,KAVA,EAWA,KAXA,EAYA,KAZA,CAAA;AAcA,UAAA,WAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,KAAA,YAAA,GAAA,CAAA,EAAA,CAAA,GAAA,EAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,KAAA,GAAA,UAAA,CAAA,CAAA,CAAA,GAAA,GAAA,GAAA,MAAA,CAAA,KAAA,QAAA,GAAA,CAAA,CAAA;AACA,QAAA,WAAA,CAAA,IAAA,CAAA,KAAA;AACA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,YAAA,GAAA,CAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,KAAA,GAAA,UAAA,CAAA,CAAA,CAAA,GAAA,GAAA,GAAA,MAAA,CAAA,KAAA,QAAA,CAAA;AACA,QAAA,WAAA,CAAA,IAAA,CAAA,KAAA;AACA;;AAEA,UAAA,SAAA,GAAA;AACA,QAAA,QAAA,EAAA,CACA;AACA,UAAA,IAAA,EAAA,IADA;AAEA,UAAA,WAAA,EAAA,MAAA,CAAA,MAAA,CAAA,SAFA;AAGA,UAAA,WAAA,EAAA,CAHA;AAIA,UAAA,UAAA,EAAA,EAJA;AAKA,UAAA,gBAAA,EAAA,GALA;AAMA,UAAA,oBAAA,EAAA,MAAA,CAAA,MAAA,CAAA,OANA;AAOA,UAAA,gBAAA,EAAA,qBAPA;AAQA,UAAA,yBAAA,EAAA,MAAA,CAAA,MAAA,CAAA,OARA;AASA,UAAA,gBAAA,EAAA,EATA;AAUA,UAAA,gBAAA,EAAA,CAVA;AAWA,UAAA,qBAAA,EAAA,EAXA;AAYA,UAAA,WAAA,EAAA,CAZA;AAaA,UAAA,IAAA,EAAA,KAAA,WAAA,CAAA,OAAA,CAAA,KAAA;AAbA,SADA,CADA;AAkBA,QAAA,MAAA,EAAA;AAlBA,OAAA,CAzBA,CA6CA;;AACA,WAAA,WAAA,CAAA,SAAA,GAAA,SAAA;AACA,WAAA,WAAA,CAAA,WAAA,GAAA,KAAA;AACA,KAlFA;AAmFA,IAAA,YAnFA,0BAmFA;AACA,UAAA,UAAA,GAAA,CACA,SADA,EAEA,UAFA,EAGA,OAHA,EAIA,OAJA,EAKA,KALA,EAMA,MANA,EAOA,MAPA,EAQA,QARA,EASA,WATA,EAUA,SAVA,EAWA,UAXA,EAYA,UAZA,CAAA;AAcA,UAAA,CAAA,GAAA,IAAA,IAAA,EAAA;AACA,WAAA,YAAA,GAAA,QAAA,CAAA,CAAA,CAAA,QAAA,KAAA,CAAA,CAAA;AACA,WAAA,SAAA,GAAA,UAAA,CAAA,CAAA,CAAA,QAAA,KAAA,CAAA,CAAA;AACA,WAAA,QAAA,GAAA,MAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA;AACA,WAAA,QAAA,GAAA,CAAA,CAAA,WAAA,EAAA;AACA,KAvGA;AAwGA,IAAA,OAxGA,mBAwGA,KAxGA,EAwGA;AACA,UAAA,KAAA,CAAA,KAAA,YAAA,CAAA,CAAA,IAAA,IAAA,KAAA,EAAA;AACA,aAAA,UAAA,GACA,MACA,MAAA,CAAA,KAAA,CAAA,KAAA,YAAA,CAAA,CAAA,KAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CADA,GAEA,GAFA,GAGA,MAAA,CAAA,KAAA,CAAA,KAAA,YAAA,CAAA,CAAA,KAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAJA;AAKA,OANA,MAMA;AACA,aAAA,UAAA,GAAA,MAAA,CAAA;AACA,aAAA,SAAA,GAAA,MAAA;AACA;AACA,KAnHA;AAoHA,IAAA,OApHA,qBAoHA;AAAA;;AACA,WAAA,OAAA,GAAA,IAAA;AACA,MAAA,UAAA,CAAA;AAAA,eAAA,KAAA,CAAA,OAAA,GAAA,IAAA;AAAA,OAAA,EAAA,IAAA,CAAA;AACA,UAAA,SAAA,GAAA,CAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CAAA;AACA,UAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,SAAA,CAAA,MAAA,CAAA;AACA,WAAA,IAAA,GAAA,SAAA,CAAA,MAAA,CAAA;AACA,KA1HA;AA2HA,IAAA,QA3HA,sBA2HA;AAAA;;AACA,WAAA,QAAA,GAAA,IAAA;AACA,MAAA,UAAA,CAAA;AAAA,eAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AAAA,OAAA,EAAA,IAAA,CAAA;AACA,UAAA,UAAA,GAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAAA;AACA,UAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,UAAA,CAAA,MAAA,CAAA;AACA,WAAA,IAAA,GAAA,UAAA,CAAA,MAAA,CAAA;AACA,KAjIA;AAkIA,IAAA,MAlIA,oBAkIA;AAAA;;AACA,WAAA,MAAA,GAAA,IAAA;AACA,MAAA,UAAA,CAAA;AAAA,eAAA,MAAA,CAAA,MAAA,GAAA,IAAA;AAAA,OAAA,EAAA,IAAA,CAAA;AACA,UAAA,QAAA,GAAA,CAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CAAA;AACA,UAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,QAAA,CAAA,MAAA,CAAA;AACA,WAAA,IAAA,GACA,QAAA,CAAA,MAAA,CAAA,CAAA,QAAA,GAAA,OAAA,CAAA,uBAAA,EAAA,GAAA,CADA;AAEA,KAzIA;AA2IA,IAAA,SA3IA,uBA2IA;AACA,WAAA,MAAA,GAAA,IAAA;AACA,KA7IA;AA8IA,IAAA,UA9IA,wBA8IA;AACA,WAAA,MAAA,GAAA,KAAA;AACA;AAhJA,GAvHA;AA2QA,EAAA,OA3QA,qBA2QA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEA,cAAA,MAAA,CAAA,SAAA,GAAA,IAAA;;AACA,cAAA,MAAA,CAAA,YAAA;;AACA,cAAA,KAJA,GAIA,MAAA,CAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAJA;AAAA;AAAA;AAAA,qBAQA,GAAA,CAAA,WAAA,CAAA,KAAA,CARA;;AAAA;AAQA,cAAA,IARA;AASA,cAAA,SATA,GASA,IAAA,CAAA,IAAA,CAAA,CAAA,CATA,CASA,SATA;;AAAA,kBAWA,SAXA;AAAA;AAAA;AAAA;;AAYA,cAAA,MAAA,CAAA,MAAA,GAAA,IAAA;AAZA;AAAA,qBAaA,GAAA,CAAA,WAAA,CAAA;AAAA,gBAAA,SAAA,EAAA;AAAA,eAAA,EAAA,KAAA,CAbA;;AAAA;AAaA,cAAA,MAbA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkBA,cAAA,OAAA,CAAA,GAAA;;AAlBA;AAAA;AAAA;AAAA,qBAqBA,GAAA,CAAA,MAAA,CAAA,KAAA,CArBA;;AAAA;AAqBA,cAAA,OArBA;;AAsBA,cAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,IAAA,CAAA,SAAA;;AACA,cAAA,MAAA,CAAA,eAAA,CAAA,OAAA,CAAA,IAAA,CAAA,SAAA;;AACA,cAAA,MAAA,CAAA,YAAA,CAAA,CAAA;;AACA,cAAA,MAAA,CAAA,SAAA,GAAA,KAAA;AAzBA;AAAA;;AAAA;AAAA;AAAA;AA2BA,cAAA,OAAA,CAAA,GAAA;;AA3BA;AA6BA,cAAA,MAAA,CAAA,IAAA,GAAA,MAAA,CAAA,KAAA;AACA,cAAA,MAAA,CAAA,IAAA,CAAA,MAAA,GAAA,IAAA;;AACA,cAAA,MAAA,CAAA,OAAA;;AACA,cAAA,MAAA,CAAA,QAAA;;AACA,cAAA,MAAA,CAAA,MAAA;;AAjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCA;AA7SA,CAAA","sourcesContent":["<template>\n  <div>\n    <div v-if=\"xModal\">\n          <modal class=\"my-modal\"\n            :show.sync=\"xModal\"\n            :centered=\"false\"\n            :show-close=\"true\"\n          >\n            <template v-slot:header class='bg-gradient-dark'>\n              \n            </template>\n              <h2 class='text-success'>This is the Main Dashboard</h2>\n\n            <h4>Under this page, you will be able to view the breakdown of your bills and utility consumption.</h4>\n            \n            <br>\n            <h4 class='text-primary'>Click anywhere to continue </h4>\n                      \n            <template v-slot:close-button>\n            </template>\n          </modal>\n           </div>\n    <div class=\"row\">\n      <div class=\"col-xl-3\">\n        <card class=\"card-body kpi-card\">\n          <div>\n            <div class=\"row\">\n              <div class=\"col-3\">\n                <div class=\"icon-big text-center\">\n                  <i\n                    class=\"tim-icons icon-money-coins text-success\"\n                    style=\"font-size: 35px\"\n                  ></i>\n                </div>\n              </div>\n              <div class=\"col-9\">\n                <div class=\"numbers bill-cards\" >\n                  <p>Outstanding Bill ({{ billMonth }})</p>\n                  <h3 style=\"margin-bottom: 0px\">{{ billAmount }}</h3>\n                </div>\n              </div>\n            </div>\n            <div>\n              <hr />\n              <div class=\"stats text-white\">\n                <span> Updated as of {{ currTime }} </span>\n              </div>\n            </div>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-xl-3\">\n        <card class=\"card-body kpi-card pb-3\">\n          <div>\n            <div class=\"row\">\n              <div class=\"col-3\">\n                <div class=\"icon-big text-center\">\n                  <i\n                    class=\"fas fa-bolt text-success\"\n                    style=\"font-size: 35px\"\n                  ></i>\n                </div>\n              </div>\n              <div class=\"col-9\">\n                <div class=\"numbers number-cards\" >\n                  <p>Electricity Consumption (kwh)</p>\n                  <h3 style=\"margin-bottom: 0px\">{{ kpi1 }}</h3>\n                </div>\n              </div>\n            </div>\n            <div>\n              <hr class=\"mb-0\" />\n              <div class=\"stats\">\n                <button\n                  id=\"elecBtn\"\n                  type=\"button\"\n                  class=\"btn btn-warning  btn-outline-success btn-sm \"\n                  :disabled=\"elecDis\"\n                  @click=\"elecKPI\"\n                >\n                  <i class=\"tim-icons icon-refresh-01\"></i> Update now\n                </button>\n              </div>\n            </div>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-xl-3\">\n        <card class=\"card-body kpi-card pb-3\">\n          <div>\n            <div class=\"row\">\n              <div class=\"col-3\">\n                <div class=\"icon-big text-center\">\n                  <i\n                    class=\"fas fa-tint text-success\"\n                    style=\"font-size: 35px\"\n                  ></i>\n                </div>\n              </div>\n              <div class=\"col-9\">\n                <div class=\"numbers number-cards\" >\n                  <p>Water Consumption (Cu M)</p>\n                  <h3 style=\"margin-bottom: 0px\">{{ kpi2 }}</h3>\n                </div>\n              </div>\n            </div>\n            <div>\n              <hr class=\"mb-0\" />\n              <div class=\"stats\">\n                <button\n                  type=\"button\"\n                  id=\"waterBtn\"\n                  class=\"btn  btn-warning btn-outline-success btn-sm\"\n                  :disabled=\"waterDis\"\n                  @click=\"waterKPI\"\n                >\n                  <i class=\"tim-icons icon-refresh-01\"></i> Update now\n                </button>\n              </div>\n            </div>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-xl-3\">\n        <card class=\"card-body kpi-card pb-3\">\n          <div>\n            <div class=\"row\">\n              <div class=\"col-3\">\n                <div class=\"icon-big text-center\">\n                  <i\n                    class=\"fas fa-burn text-success\"\n                    style=\"font-size: 40px\"\n                  ></i>\n                </div>\n              </div>\n              <div class=\"col-9\">\n                <div class=\"numbers number-cards\" >\n                  <p>Gas Consumption (kwh)</p>\n                  <h3 style=\"margin-bottom: 0px\">{{ kpi3 }}</h3>\n                </div>\n              </div>\n            </div>\n            <div>\n              <hr class=\"mb-0\" />\n              <div class=\"stats\">\n                <button\n                  type=\"button\"\n                  id=\"gasBtn\"\n                  class=\"btn btn-warning btn-outline-success btn-sm\"\n                  :disabled=\"gasDis\"\n                  @click=\"gasKPI\"\n                >\n                  <i class=\"tim-icons icon-refresh-01\"></i> Update now\n                </button>\n              </div>\n            </div>\n          </div>\n        </card>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <div class=\"row chart\">\n              <div v-if=\"isLoading\" class=\"loader\">\n                <vue-simple-spinner\n                  message=\"Please wait while we retrieve your information\"\n                ></vue-simple-spinner>\n              </div>\n              <div class=\"col-sm-6 text-left\">\n                <h2 class=\"card-title\">\n                  {{ $t(\"dashboard.monthlyConsumption\") }}\n                </h2>\n              </div>\n              <div class=\"col-sm-6\">\n                <div\n                  class=\"btn-group btn-group-toggle float-right\"\n                  data-toggle=\"buttons\"\n                >\n                  <label\n                    v-for=\"(option, index) in bigBarChartCategories\"\n                    :key=\"option\"\n                    class=\"btn btn-sm btn-primary btn-simple\"\n                    :class=\"{ active: bigBarChart.activeIndex === index }\"\n                    :id=\"index\"\n                  >\n                    <input\n                      type=\"radio\"\n                      @click=\"initBigChart(index)\"\n                      name=\"options\"\n                      autocomplete=\"off\"\n                      :checked=\"bigBarChart.activeIndex === index\"\n                    />\n                    {{ option }}\n                  </label>\n                </div>\n              </div>\n            </div>\n          </template>\n          <div class=\"chart-area\">\n            <bar-chart\n              style=\"height: 100%\"\n              ref=\"bigChart\"\n              chart-id=\"big-bar-chart\"\n              :chart-data=\"bigBarChart.chartData\"\n              :gradient-colors=\"bigBarChart.gradientColors\"\n              :gradient-stops=\"bigBarChart.gradientStops\"\n              :extra-options=\"bigBarChart.extraOptions\"\n            >\n            </bar-chart>\n          </div>\n        </card>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-xl-4\" id=\"elecBreak\">\n        <card type=\"chart\" class=\"bdchart\">\n          <template slot=\"header\">\n            <h3 class=\"card-title\">\n              <i class=\"fas fa-bolt text-success\" style=\"font-size: 20px\"></i>\n              {{ $t(\"dashboard.electricityBreakdown\") }}\n            </h3>\n          </template>\n          <div class=\"chart-area\">\n            <doughnut-chart\n              style=\"height: 100%\"\n              chart-id=\"doughnut-chart\"\n              :chart-data=\"electricityDoughnut.chartData\"\n              :extra-options=\"electricityDoughnut.extraOptions\"\n            >\n            </doughnut-chart>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-xl-4\" id=\"waterBreak\">\n        <card type=\"chart\" class=\"bdchart\">\n          <template slot=\"header\">\n            <h3 class=\"card-title\">\n              <i class=\"fas fa-tint text-success\" style=\"font-size: 20px\"></i>\n              {{ $t(\"dashboard.waterBreakdown\") }}\n            </h3>\n          </template>\n          <div class=\"chart-area\">\n            <doughnut-chart\n              style=\"height: 100%\"\n              chart-id=\"doughnut-chart\"\n              :chart-data=\"waterDoughnut.chartData\"\n              :extra-options=\"waterDoughnut.extraOptions\"\n            >\n            </doughnut-chart>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-xl-4\" id=\"gasBreak\">\n        <card type=\"chart\" class=\"bdchart\">\n          <template slot=\"header\">\n            <h3 class=\"card-title\">\n              <i class=\"fas fa-burn text-success\" style=\"font-size: 20px\"></i>\n              {{ $t(\"dashboard.gasBreakdown\") }}\n            </h3>\n          </template>\n          <div class=\"chart-area\">\n            <doughnut-chart\n              style=\"height: 100%\"\n              chart-id=\"doughnut-chart\"\n              :chart-data=\"gasDoughnut.chartData\"\n              :extra-options=\"gasDoughnut.extraOptions\"\n            >\n            </doughnut-chart>\n          </div>\n        </card>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport BarChart from \"@/components/Charts/BarChart\";\nimport DoughnutChart from \"@/components/Charts/DoughnutChart\";\nimport * as chartConfigs from \"@/components/Charts/config\";\nimport TaskList from \"./Dashboard/TaskList\";\nimport UserTable from \"./Dashboard/UserTable\";\nimport config from \"@/config\";\nimport API from \"../api/API\";\nimport { Modal } from \"@/components\";\n\nexport default {\n  components: {\n    BarChart,\n    TaskList,\n    UserTable,\n    DoughnutChart,\n    Modal\n  },\n  data() {\n    return {\n      xModal: false,\n      elecDis: true,\n      waterDis: true,\n      gasDis: true,\n      isLoading: false,\n      currYear: 0,\n      currTime: \"\",\n      bills: \"\",\n      prevMonthNum: \"\",\n      billMonth: \"\",\n      billAmount: \"\",\n      kpi1: \"\",\n      kpi2: \"\",\n      kpi3: \"\",\n      electricityDoughnut: {\n        extraOptions: chartConfigs.doughnutChartOptions,\n        chartData: {\n          labels: [\"Aircon\", \"Fridge\", \"TV\", \"Fan & Lights\", \"Others\"],\n          datasets: [\n            {\n              label: \"Electricity\",\n              data: [40, 30, 15, 10, 5],\n              backgroundColor: [\n                \"rgb(116, 198, 157)\",\n                \"rgb(183, 228, 199)\",\n                \"rgb(45, 106, 79)\",\n                \"rgb(27, 67, 50)\",\n                \"rgb(36, 71, 60)\",\n              ],\n              fontColor: \"fff\",\n              borderColor: 'transparent'\n            },\n          ],\n        },\n      },\n      waterDoughnut: {\n        extraOptions: chartConfigs.doughnutChartOptions,\n        chartData: {\n          labels: [\"Common\", \"Master\", \"Washing Machine\", \"Kitchen\"],\n          datasets: [\n            {\n              label: \"Water\",\n              data: [45, 30, 15, 10],\n              backgroundColor: [\n                \"rgb(42, 111, 151)\",\n                \"rgb(1, 79, 134)\",\n                \"rgb(137, 194, 217)\",\n                \"rgb(169, 214, 229)\",\n              ],\n              fontColor: \"fff\",\n              borderColor: 'transparent'\n            },\n          ],\n        },\n      },\n      gasDoughnut: {\n        extraOptions: chartConfigs.doughnutChartOptions,\n        chartData: {\n          labels: [\"Stove 1\", \"Stove 2\", \"Stove 3\"],\n          datasets: [\n            {\n              label: \"Gas\",\n              data: [40, 30, 30],\n              backgroundColor: [\n                \"rgb(170, 161, 200)\",\n                \"rgb(213, 198, 224)\",\n                \"rgb(150, 122, 161)\",\n              ],\n              fontColor: \"fff\",\n              borderColor: 'transparent'\n            },\n          ],\n        },\n      },\n      bigBarChart: {\n        allData: [],\n        activeIndex: 0,\n        chartData: {\n          datasets: [{}],\n          labels: [],\n        },\n        extraOptions: chartConfigs.bigBarChartOptions,\n        gradientColors: config.colors.primaryGradient,\n        gradientStops: [1, 0.4, 0],\n        categories: [],\n      },\n    };\n  },\n  computed: {\n    enableRTL() {\n      return this.$route.query.enableRTL;\n    },\n    isRTL() {\n      return this.$rtl.isRTL;\n    },\n    bigBarChartCategories() {\n      return this.$t(\"dashboard.chartCategories\");\n    },\n    async stripe() {\n      const token = window.localStorage.getItem(\"token\");\n      console.log(token);\n      try {\n        const res1 = await API.stripe(token);\n        console.log(res1);\n      } catch (err) {\n        console.log(err);\n      }\n    },\n  },\n  methods: {\n    setBigChartData(bills) {\n      var numData = [[], [], []];\n      for (var i = this.prevMonthNum + 1; i < 12; i++){\n        var amount = parseInt(String(bills[i].price).slice(0, -2));\n        for (var j = 0; j < numData.length; j++) {\n          if (j == numData.length - 1) {\n            numData[j].push(amount);\n          } else {\n            var temp = parseFloat(\n              Math.floor(Math.random() * ((amount / 100) * 70)).toFixed(2)\n            );\n            numData[j].push(temp);\n            amount = amount - temp;\n          }\n        }\n      }\n      for (var i = 0; i < this.prevMonthNum + 1; i++) {\n        var amount = parseInt(String(bills[i].price).slice(0, -2));\n        for (var j = 0; j < numData.length; j++) {\n          if (j == numData.length - 1) {\n            numData[j].push(amount);\n          } else {\n            var temp = parseFloat(\n              Math.floor(Math.random() * ((amount / 100) * 70)).toFixed(2)\n            );\n            numData[j].push(temp);\n            amount = amount - temp;\n          }\n        }\n      }\n      \n      this.bigBarChart.allData = numData;\n    },\n    initBigChart(index) {\n      var monthsData = [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\",\n      ];\n      var monthLabels = [];\n      for (var i = this.prevMonthNum + 1 ; i < 12; i++) {\n        var month = monthsData[i] + \" \" + String(this.currYear-1);\n        monthLabels.push(month);\n      }\n      for (var i = 0; i < this.prevMonthNum + 1; i++) {\n        var month = monthsData[i] + \" \" + String(this.currYear);\n        monthLabels.push(month);\n      }\n      \n      let chartData = {\n        datasets: [\n          {\n            fill: true,\n            borderColor: config.colors.secondary,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: config.colors.primary,\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: config.colors.primary,\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: this.bigBarChart.allData[index],\n          },\n        ],\n        labels: monthLabels,\n      };\n      //this.$refs.bigChart.updateGradients(chartData);\n      this.bigBarChart.chartData = chartData;\n      this.bigBarChart.activeIndex = index;\n    },\n    getBillMonth() {\n      var monthNames = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n      ];\n      var d = new Date();\n      this.prevMonthNum = parseInt(d.getMonth() - 1);\n      this.billMonth = monthNames[d.getMonth() - 1];\n      this.currTime = String(d).slice(0, String(d).indexOf(\"GMT\"));\n      this.currYear = d.getFullYear();\n    },\n    calBill(bills) {\n      if (bills[this.prevMonthNum].paid == false) {\n        this.billAmount =\n          \"$\" +\n          String(bills[this.prevMonthNum].price).slice(0, -2) +\n          \".\" +\n          String(bills[this.prevMonthNum].price).slice(-2);\n      } else {\n        this.billAmount = \"$\" + 0;\n        this.billMonth = \"Paid\";\n      }\n    },\n    elecKPI() {\n      this.elecDis = true;\n      setTimeout(() => (this.elecDis = null), 3000);\n      var elec_list = [423, 467, 541, 392, 453];\n      var random = Math.floor(Math.random() * elec_list.length);\n      this.kpi1 = elec_list[random] ;\n    },\n    waterKPI() {\n      this.waterDis = true;\n      setTimeout(() => (this.waterDis = null), 3000);\n      var water_list = [4230, 4670, 5410, 3920, 4530];\n      var random = Math.floor(Math.random() * water_list.length);\n      this.kpi2 = water_list[random] ;\n    },\n    gasKPI() {\n      this.gasDis = true;\n      setTimeout(() => (this.gasDis = null), 3000);\n      var gas_list = [645, 342, 432, 589, 473];\n      var random = Math.floor(Math.random() * gas_list.length);\n      this.kpi3 =\n        gas_list[random].toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") ;\n    },\n\n    showModal() {\n      this.xModal = true;\n    },\n    closeModal() {\n      this.xModal = false;\n    }\n    \n\n  },\n  async mounted() {\n    \n    this.isLoading = true;\n    this.getBillMonth();\n    const token = window.localStorage.getItem(\"token\");\n    try {\n      \n      \n        const res1 = await API.findProfile(token)\n        const { dashboard } = res1.data[0]\n        \n        if (!dashboard){\n          this.xModal = true\n          const result = await API.updateFirst({dashboard: true}, token)\n        } \n      \n      \n    } catch (error) {\n      console.log(error)\n    }\n    try {\n      const result = await API.stripe(token);\n      this.calBill(result.data.extracted);\n      this.setBigChartData(result.data.extracted);\n      this.initBigChart(0);\n      this.isLoading = false;\n    } catch (error) {\n      console.log(error);\n    }\n    this.i18n = this.$i18n;\n    this.i18n.locale = \"en\";\n    this.elecKPI();\n    this.waterKPI();\n    this.gasKPI();\n  },\n};\n</script>\n<style>\n.chart {\n  position: relative;\n}\n.loader {\n  position: absolute;\n  top: 250%;\n}\n\n\n\n@media screen and (min-width: 1200px) {\n  .number-cards{\n    height: 100px;\n  }\n  .bill-cards{\n    height: 80px;\n  }\n}\n\n@media screen and (max-width: 1800px) {\n  .kpi-card {\n    height: 15em;\n  }\n}\n@media screen and (max-width: 1250px) {\n  .kpi-card {\n    height: 17em;\n  }\n}\n@media screen and (max-width: 1200px) {\n  .kpi-card {\n    height: 12em;\n  }\n}\n@media screen and (max-width: 1250px) {\n  .bdchart {\n    height: 25em;\n  }\n}\n</style>"],"sourceRoot":"src/pages"}]}